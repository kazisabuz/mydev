BEGIN
FOR IDX IN (
WITH DAY_WISE_AC_BALANCE
AS(------------------- FOR DAY WISE TRANSACTION SUMMATION --------------------
SELECT TRAN_INTERNAL_ACNUM,TRAN_DATE_OF_TRAN,SUM(CREDIT_AMOUNT) DAY_WISE_CREDIT_SUM,SUM(DEBIT_AMOUNT) DAY_WISE_DEBIT_SUM, 
SUM(CREDIT_TRANSACTION) DAY_WISE_CREDIT_TRAN, SUM(DEBIT_TRANSACTION) DAY_WISE_DEBIT_TRAN,
 SUM(PRIN_AC_AMT_CR) DAY_WISE_PRIN_AC_AMT_CR,SUM(PRIN_AC_AMT_DR) DAY_WISE_PRIN_AC_AMT_DR,SUM(INTRD_AC_AMT_CR) DAY_WISE_INTRD_AC_AMT_CR,
 SUM(INTRD_AC_AMT_DR) DAY_WISE_INTRD_AC_AMT_DR,SUM(CHARGE_AC_AMT_CR) DAY_WISE_CHARGE_AC_AMT_CR, SUM(CHARGE_AC_AMT_DR) DAY_WISE_CHARGE_AC_AMT_DR
FROM(
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2014 TR LEFT OUTER JOIN TRANADV2014 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2015 TR LEFT OUTER JOIN TRANADV2015 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2016 TR LEFT OUTER JOIN TRANADV2016 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2017 TR LEFT OUTER JOIN TRANADV2017 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2018 TR LEFT OUTER JOIN TRANADV2018 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2019 TR LEFT OUTER JOIN TRANADV2019 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2020 TR LEFT OUTER JOIN TRANADV2020 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2021 TR LEFT OUTER JOIN TRANADV2021 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR DAY WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TR.TRAN_DATE_OF_TRAN,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2022 TR LEFT OUTER JOIN TRANADV2022 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0))
GROUP BY TRAN_INTERNAL_ACNUM,TRAN_DATE_OF_TRAN)
SELECT TRAN_INTERNAL_ACNUM INT_AC_NO, TRAN_DATE_OF_TRAN TRAN_DATE, 
 ACCOUNT_CURRENT_BALANCE DW_CLS_BAL
FROM(
------------------ START SELECT QUERY FROM DAY WISE ACCOUNT BALANCE ---------------------
SELECT TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN, DAY_WISE_CREDIT_TRAN, DAY_WISE_DEBIT_TRAN, 
SUM(DAY_WISE_CREDIT_TRAN) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) CREDIT_TRAN_SUMMATION,
SUM(DAY_WISE_DEBIT_TRAN) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) DEBIT_TRAN_SUMMATION,
DAY_WISE_CREDIT_SUM,DAY_WISE_DEBIT_SUM, 
SUM(DAY_WISE_CREDIT_SUM) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) CREDIT_OPENING_BALANCE,
SUM(DAY_WISE_DEBIT_SUM) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) DEBIT_OPENING_BALANCE,
SUM(DAY_WISE_CREDIT_SUM-DAY_WISE_DEBIT_SUM) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) ACCOUNT_CURRENT_BALANCE,
------------------ START CALCULATION FOR LOAN TYPES OF ACCOUNT --------------------------
------------------ FOR PRENCIPAL TRANSACTION AMOUNT -------------------------------------
DAY_WISE_PRIN_AC_AMT_CR, DAY_WISE_PRIN_AC_AMT_DR,
SUM(DAY_WISE_PRIN_AC_AMT_CR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) CREDIT_OPENING_PRIN_BALANCE,
SUM(DAY_WISE_PRIN_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) DEBIT_OPENING_PRIN_BALANCE,
SUM(DAY_WISE_PRIN_AC_AMT_CR-DAY_WISE_PRIN_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) PRIN_OUTSTANDING,
------------------ FOR INTEREST TRANSACTION AMOUNT -------------------------------------
DAY_WISE_INTRD_AC_AMT_CR,DAY_WISE_INTRD_AC_AMT_DR,
SUM(DAY_WISE_INTRD_AC_AMT_CR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) CREDIT_OPENING_INTRD_BALANCE,
SUM(DAY_WISE_INTRD_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) DEBIT_OPENING_INTRD_BALANCE,
SUM(DAY_WISE_INTRD_AC_AMT_CR-DAY_WISE_INTRD_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) INTRD_OUTSTANDING,
------------------ FOR CHARGE TRANSACTION AMOUNT -------------------------------------
DAY_WISE_CHARGE_AC_AMT_CR,DAY_WISE_CHARGE_AC_AMT_DR,
SUM(DAY_WISE_CHARGE_AC_AMT_CR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) CREDIT_OPENING_CHARGE_BALANCE,
SUM(DAY_WISE_CHARGE_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) DEBIT_OPENING_CHARGE_BALANCE,
SUM(DAY_WISE_CHARGE_AC_AMT_CR-DAY_WISE_CHARGE_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRAN_DATE_OF_TRAN) CHARGE_OUTSTANDING
FROM DAY_WISE_AC_BALANCE)
ORDER BY TRAN_INTERNAL_ACNUM,TRAN_DATE_OF_TRAN) LOOP
 UPDATE ACBALASONHIST SET 
    ACBALH_AC_BAL = IDX.DW_CLS_BAL, 
    ACBALH_BC_BAL = IDX.DW_CLS_BAL
    WHERE ACBALH_ENTITY_NUM = 1
        AND ACBALH_INTERNAL_ACNUM = IDX.INT_AC_NO 
        AND ACBALH_ASON_DATE = IDX.TRAN_DATE;
END LOOP ;
END ;