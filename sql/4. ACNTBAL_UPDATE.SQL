BEGIN
FOR IDX IN (
WITH ACCOUNT_WISE_TOTAL_BALANCE
AS(------------------- FORMONTHS WISE TRANSACTION SUMMATION --------------------
SELECT TRAN_INTERNAL_ACNUM,SUM(CREDIT_AMOUNT) ACCOUNT_WISE_CREDIT_SUM,SUM(DEBIT_AMOUNT) ACCOUNT_WISE_DEBIT_SUM, 
SUM(CREDIT_TRANSACTION) ACCOUNT_WISE_CREDIT_TRAN, SUM(DEBIT_TRANSACTION) ACCOUNT_WISE_DEBIT_TRAN,
 SUM(PRIN_AC_AMT_CR) ACCOUNT_WISE_PRIN_AC_AMT_CR,SUM(PRIN_AC_AMT_DR) ACCOUNT_WISE_PRIN_AC_AMT_DR,SUM(INTRD_AC_AMT_CR) ACCOUNT_WISE_INTRD_AC_AMT_CR,
 SUM(INTRD_AC_AMT_DR) ACCOUNT_WISE_INTRD_AC_AMT_DR,SUM(CHARGE_AC_AMT_CR) ACCOUNT_WISE_CHARGE_AC_AMT_CR, SUM(CHARGE_AC_AMT_DR) ACCOUNT_WISE_CHARGE_AC_AMT_DR
FROM( 
(SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2014 TR LEFT OUTER JOIN TRANADV2014 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2015 TR LEFT OUTER JOIN TRANADV2015 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0 
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2016 TR LEFT OUTER JOIN TRANADV2016 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2017 TR LEFT OUTER JOIN TRANADV2017 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2018 TR LEFT OUTER JOIN TRANADV2018 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2019 TR LEFT OUTER JOIN TRANADV2019 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2020 TR LEFT OUTER JOIN TRANADV2020 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2021 TR LEFT OUTER JOIN TRANADV2021 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0
UNION ALL
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM, TR.TRAN_DATE_OF_TRAN, TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2022 TR LEFT OUTER JOIN TRANADV2022 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0))
GROUP BY TRAN_INTERNAL_ACNUM)
SELECT TT.TRAN_INTERNAL_ACNUM, TT.ACCOUNT_WISE_CREDIT_SUM, TT.ACCOUNT_WISE_DEBIT_SUM,TT.ACCOUNT_WISE_PRIN_AC_AMT_CR, TT.ACCOUNT_WISE_PRIN_AC_AMT_DR,
TT.ACCOUNT_WISE_INTRD_AC_AMT_CR,
TT.ACCOUNT_WISE_INTRD_AC_AMT_DR,
TT.ACCOUNT_WISE_CHARGE_AC_AMT_CR,
TT.ACCOUNT_WISE_CHARGE_AC_AMT_DR, 
 ACCOUNT_WISE_CREDIT_SUM- ACCOUNT_WISE_DEBIT_SUM CURRENT_BALANCE FROM ACCOUNT_WISE_TOTAL_BALANCE TT ) LOOP
 UPDATE ACNTBAL SET 
 ACNTBAL_AC_CUR_DB_SUM = IDX.ACCOUNT_WISE_DEBIT_SUM, 
 ACNTBAL_AC_CUR_CR_SUM = IDX.ACCOUNT_WISE_CREDIT_SUM, 
 ACNTBAL_BC_CUR_DB_SUM = IDX.ACCOUNT_WISE_DEBIT_SUM, 
 ACNTBAL_BC_CUR_CR_SUM = IDX.ACCOUNT_WISE_CREDIT_SUM,
 ACNTBAL_AC_BAL = IDX.CURRENT_BALANCE, 
 ACNTBAL_BC_BAL = IDX.CURRENT_BALANCE
 WHERE ACNTBAL_ENTITY_NUM = 1
 AND ACNTBAL_INTERNAL_ACNUM = IDX.TRAN_INTERNAL_ACNUM ;
END LOOP ;
END ;