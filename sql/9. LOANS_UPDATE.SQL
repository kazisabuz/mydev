-- ACASLLDTL

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE ACASLLDTL
         SET ACASLLDTL_INTERNAL_ACNUM = V_AC_NUM
       WHERE     ACASLLDTL_ENTITY_NUM = 1
             AND ACASLLDTL_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END; 


--- ASSETCLS


BEGIN
FOR IDX IN (
SELECT B.IACLINK_INTERNAL_ACNUM , TEM.LATEST_EFFECTIVE_DATE FROM ACTUAL_ACCOUNT_UPDATE B,
(SELECT A.IACLINK_ACTUAL_ACNUM, MAX(ASSETCLSH_EFF_DATE) LATEST_EFFECTIVE_DATE FROM ACTUAL_ACCOUNT_UPDATE A, ASSETCLSHIST WHERE A.IACLINK_ACTUAL_ACNUM IN (
SELECT IACLINK_ACTUAL_ACNUM      FROM ASSETCLS , ACTUAL_ACCOUNT_UPDATE
WHERE ASSETCLS_ENTITY_NUM = 1
AND ASSETCLS_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM
GROUP BY IACLINK_ACTUAL_ACNUM 
HAVING COUNT(*) > 1)
AND IACLINK_INTERNAL_ACNUM = ASSETCLSH_INTERNAL_ACNUM
AND ASSETCLSH_ENTITY_NUM = 1
GROUP BY A.IACLINK_ACTUAL_ACNUM) TEM
WHERE TEM.IACLINK_ACTUAL_ACNUM = B.IACLINK_ACTUAL_ACNUM
AND B.SL= 1) LOOP 
UPDATE ASSETCLS ASS 
SET ASSETCLS_LATEST_EFF_DATE = IDX.LATEST_EFFECTIVE_DATE
WHERE ASSETCLS_ENTITY_NUM = 1
AND ASSETCLS_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM ;
END LOOP;
END ;

DELETE FROM ASSETCLS ASS WHERE ASS.ASSETCLS_ENTITY_NUM = 1 AND ASS.ASSETCLS_INTERNAL_ACNUM IN (
SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE A WHERE A.IACLINK_ACTUAL_ACNUM IN (
SELECT IACLINK_ACTUAL_ACNUM      FROM ASSETCLS , ACTUAL_ACCOUNT_UPDATE
WHERE ASSETCLS_ENTITY_NUM = 1
AND ASSETCLS_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM
GROUP BY IACLINK_ACTUAL_ACNUM 
HAVING COUNT(*) > 1)
AND A.SL <> 1 ) ;




 
DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE ASSETCLS
         SET ASSETCLS_INTERNAL_ACNUM = V_AC_NUM
       WHERE     ASSETCLS_ENTITY_NUM = 1
             AND ASSETCLS_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;




--- ASSETCLSHIST



/*
10352500000286
10352500001112
*/

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE ASSETCLSHIST
         SET ASSETCLSH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     ASSETCLSH_ENTITY_NUM = 1
             AND ASSETCLSH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;



-- LLACNTOS
---
/*
SELECT LLACNTOS_ENTITY_NUM ||
LLACNTOS_CLIENT_CODE ||
LLACNTOS_LIMIT_LINE_NUM ||
IACLINK_ACTUAL_ACNUM FROM LLACNTOS L, ACTUAL_ACCOUNT_UPDATE
 WHERE L.LLACNTOS_CLIENT_ACNUM = IACLINK_INTERNAL_ACNUM 
GROUP BY LLACNTOS_ENTITY_NUM ||
LLACNTOS_CLIENT_CODE ||
LLACNTOS_LIMIT_LINE_NUM ||
IACLINK_ACTUAL_ACNUM 
HAVING COUNT(*) > 1 ;
*/

DELETE FROM LLACNTOS WHERE LLACNTOS_CLIENT_ACNUM IN ( 10318600008873, 10292300014453) AND LLACNTOS_LIMIT_CURR_DISB_MADE = 0 ;


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LLACNTOS
         SET LLACNTOS_CLIENT_ACNUM = V_AC_NUM
       WHERE     LLACNTOS_ENTITY_NUM = 1
             AND LLACNTOS_CLIENT_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACAODHIST

/*
SELECT LNACAODH_ENTITY_NUM  ||
IACLINK_ACTUAL_ACNUM   ||
LNACAODH_AOD_BY   ||
LNACAODH_GUAR_SL    ||
LNACAODH_ENTRY_DATE   FROM LNACAODHIST L, ACTUAL_ACCOUNT_UPDATE
 WHERE L.LNACAODH_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM 
GROUP BY LNACAODH_ENTITY_NUM  ||
IACLINK_ACTUAL_ACNUM   ||
LNACAODH_AOD_BY   ||
LNACAODH_GUAR_SL    ||
LNACAODH_ENTRY_DATE  
HAVING COUNT(*) > 1  ;
*/

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACAODHIST
         SET LNACAODH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACAODH_ENTITY_NUM = 1
             AND LNACAODH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


--- LNACDISB

/*
SELECT LNACDISB_ENTITY_NUM   ||
IACLINK_ACTUAL_ACNUM    ||
LNACDISB_DISB_SL_NUM   FROM LNACDISB L, ACTUAL_ACCOUNT_UPDATE
 WHERE L.LNACDISB_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM 
GROUP BY LNACDISB_ENTITY_NUM   ||
IACLINK_ACTUAL_ACNUM    ||
LNACDISB_DISB_SL_NUM
HAVING COUNT(*) > 1  ;

*/



DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACDISB
         SET LNACDISB_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACDISB_ENTITY_NUM = 1
             AND LNACDISB_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;

--- LNACDSDTL


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACDSDTL
         SET LNACDSDTL_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACDSDTL_ENTITY_NUM = 1
             AND LNACDSDTL_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;



--- LNACDSDTLHIST

/*
SELECT LNACDSDTLH_ENTITY_NUM  ||
IACLINK_ACTUAL_ACNUM    ||
LNACDSDTLH_EFF_DATE    ||
LNACDSDTLH_SL_NUM    FROM LNACDSDTLHIST L, ACTUAL_ACCOUNT_UPDATE
 WHERE L.LNACDSDTLH_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM 
GROUP BY LNACDSDTLH_ENTITY_NUM  ||
IACLINK_ACTUAL_ACNUM    ||
LNACDSDTLH_EFF_DATE    ||
LNACDSDTLH_SL_NUM
HAVING COUNT(*) > 1  ;

*/


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACDSDTLHIST
         SET LNACDSDTLH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACDSDTLH_ENTITY_NUM = 1
             AND LNACDSDTLH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACGUAR


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACGUAR
         SET LNGUAR_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNGUAR_ENTITY_NUM = 1
             AND LNGUAR_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;

-- LNACINTCTL



DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACINTCTL
         SET LNACINTCTL_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACINTCTL_ENTITY_NUM = 1
             AND LNACINTCTL_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACINTCTLHIST


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACINTCTLHIST
         SET LNACINTCTLH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACINTCTLH_ENTITY_NUM = 1
             AND LNACINTCTLH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACIR



/*


SELECT IACLINK_ACTUAL_ACNUM      FROM LNACIR , ACTUAL_ACCOUNT_UPDATE
WHERE LNACIR_ENTITY_NUM = 1
AND LNACIR_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM
GROUP BY IACLINK_ACTUAL_ACNUM 
HAVING COUNT(*) > 1


*/


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACIR
         SET LNACIR_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACIR_ENTITY_NUM = 1
             AND LNACIR_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


--- LNACIRHIST

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACIRHIST
         SET LNACIRH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACIRH_ENTITY_NUM = 1
             AND LNACIRH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;

--- LNACIRS

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACIRS
         SET LNACIRS_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACIRS_ENTITY_NUM = 1
             AND LNACIRS_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


--- LNACIRSHIST

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACIRSHIST
         SET LNACIRSH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACIRSH_ENTITY_NUM = 1
             AND LNACIRSH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


--- LNACMIS

/*
DELETE FROM LNACMIS WHERE LNACMIS_ENTITY_NUM = 1
AND  LNACMIS_INTERNAL_ACNUM IN (
SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE WHERE SL <> 1 ) ;
*/


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
   BEGIN
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACMIS
         SET LNACMIS_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACMIS_ENTITY_NUM = 1
             AND LNACMIS_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   EXCEPTION WHEN DUP_VAL_ON_INDEX THEN 
   CONTINUE ;
   END ;
   END LOOP;
END;

--- LNACMISHIST


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACMISHIST
         SET LNACMISH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACMISH_ENTITY_NUM = 1
             AND LNACMISH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;

-- LNACRS


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACRS
         SET LNACRS_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACRS_ENTITY_NUM = 1
             AND LNACRS_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACRSDTL

/*
SELECT LNACRSDTL_ENTITY_NUM    ||
IACLINK_ACTUAL_ACNUM    ||
LNACRSDTL_SL_NUM      FROM LNACRSDTL L, ACTUAL_ACCOUNT_UPDATE
 WHERE L.LNACRSDTL_INTERNAL_ACNUM = IACLINK_INTERNAL_ACNUM 
GROUP BY 
LNACRSDTL_ENTITY_NUM    ||
IACLINK_ACTUAL_ACNUM    ||
LNACRSDTL_SL_NUM       
HAVING COUNT(*) > 1  ;
*/


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACRSDTL
         SET LNACRSDTL_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACRSDTL_ENTITY_NUM = 1
             AND LNACRSDTL_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACRSHDTL


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACRSHDTL
         SET LNACRSHDTL_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACRSHDTL_ENTITY_NUM = 1
             AND LNACRSHDTL_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LNACRSHIST


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNACRSHIST
         SET LNACRSH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACRSH_ENTITY_NUM = 1
             AND LNACRSH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;



-- LNSUSPBAL


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNSUSPBAL
         SET LNSUSPBAL_ACNT_NUM = V_AC_NUM
       WHERE     LNSUSPBAL_ENTITY_NUM = 1
             AND LNSUSPBAL_ACNT_NUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;



-- LNSUSPLED


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LNSUSPLED
         SET LNSUSP_ACNT_NUM = V_AC_NUM
       WHERE     LNSUSP_ENTITY_NUM = 1
             AND LNSUSP_ACNT_NUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LOANIA


/*

BEGIN
   FOR IDX
      IN (  SELECT LOANIA_ENTITY_NUM,
                   10352500000286 LOANIA_ACNT_NUM,
                   LOANIA_BRN_CODE,
                   LOANIA_VALUE_DATE,
                   LOANIA_ACCRUAL_DATE,
                   SUM (LOANIA_ACNT_BAL) LOANIA_ACNT_BAL,
                   SUM (LOANIA_TOTAL_NEW_INT_AMT) LOANIA_TOTAL_NEW_INT_AMT,
                   SUM (LOANIA_INT_ON_AMT) LOANIA_INT_ON_AMT,
                   SUM (LOANIA_INT_AMT) LOANIA_INT_AMT,
                   SUM (LOANIA_INT_AMT_RND) LOANIA_INT_AMT_RND
              FROM LOANIA
             WHERE     LOANIA_ENTITY_NUM = 1
                   AND LOANIA_BRN_CODE = 3525
                   AND LOANIA_ACNT_NUM IN (10352500000286, 10352500001112)
          GROUP BY LOANIA_ENTITY_NUM,
                   LOANIA_BRN_CODE,
                   LOANIA_VALUE_DATE,
                   LOANIA_ACCRUAL_DATE)
   LOOP
      UPDATE LOANIA
         SET LOANIA_ACNT_BAL = IDX.LOANIA_ACNT_BAL,
             LOANIA_TOTAL_NEW_INT_AMT = IDX.LOANIA_TOTAL_NEW_INT_AMT,
             LOANIA_INT_ON_AMT = IDX.LOANIA_INT_ON_AMT,
             LOANIA_INT_AMT = IDX.LOANIA_INT_AMT,
             LOANIA_INT_AMT_RND = IDX.LOANIA_INT_AMT_RND
       WHERE     LOANIA_ENTITY_NUM = 1
             AND LOANIA_ACNT_NUM = IDX.LOANIA_ACNT_NUM
             AND LOANIA_BRN_CODE = IDX.LOANIA_BRN_CODE
             AND LOANIA_VALUE_DATE = IDX.LOANIA_VALUE_DATE
             AND LOANIA_ACCRUAL_DATE = IDX.LOANIA_ACCRUAL_DATE;
   END LOOP;
END; 


DELETE FROM LOANIA WHERE LOANIA_ACNT_NUM =  10352500001112 ;

*/


DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LOANIA
         SET LOANIA_ACNT_NUM = V_AC_NUM
       WHERE     LOANIA_ENTITY_NUM = 1
             AND LOANIA_ACNT_NUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LOANIADTL



/*
BEGIN
   FOR IDX
      IN (  SELECT LOANIADTL_ENTITY_NUM,
                   10352500000286 LOANIADTL_ACNT_NUM,
                   LOANIADTL_BRN_CODE,
                   LOANIADTL_VALUE_DATE, LOANIADTL_ACCRUAL_DATE, 
                   SUM (LOANIADTL_UPTO_AMT) LOANIADTL_UPTO_AMT,
                   SUM (LOANIADTL_INT_AMT) LOANIADTL_INT_AMT,
                   SUM (LOANIADTL_INT_AMT_RND) LOANIADTL_INT_AMT_RND
              FROM LOANIADTL
             WHERE     LOANIADTL_ENTITY_NUM = 1
                   AND LOANIADTL_BRN_CODE = 3525
                   AND LOANIADTL_ACNT_NUM IN (10352500000286, 10352500001112)
          GROUP BY LOANIADTL_ENTITY_NUM,
                   LOANIADTL_BRN_CODE,
                   LOANIADTL_VALUE_DATE, LOANIADTL_ACCRUAL_DATE)
   LOOP
      UPDATE LOANIADTL
         SET LOANIADTL_UPTO_AMT = IDX.LOANIADTL_UPTO_AMT,
             LOANIADTL_INT_AMT = IDX.LOANIADTL_INT_AMT,
             LOANIADTL_INT_AMT_RND = IDX.LOANIADTL_INT_AMT_RND
       WHERE     LOANIADTL_ENTITY_NUM = 1
             AND LOANIADTL_ACNT_NUM = IDX.LOANIADTL_ACNT_NUM
             AND LOANIADTL_BRN_CODE = IDX.LOANIADTL_BRN_CODE
             AND LOANIADTL_VALUE_DATE = IDX.LOANIADTL_VALUE_DATE
             AND LOANIADTL_ACCRUAL_DATE = IDX.LOANIADTL_ACCRUAL_DATE;
   END LOOP;
END;


DELETE FROM LOANIADTL  WHERE LOANIADTL_ACNT_NUM =  10352500001112 ;



*/

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LOANIADTL
         SET LOANIADTL_ACNT_NUM = V_AC_NUM
       WHERE     LOANIADTL_ENTITY_NUM = 1
             AND LOANIADTL_ACNT_NUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;



-- LOANACHIST

DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LOANACHIST
         SET LNACH_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACH_ENTITY_NUM = 1
             AND LNACH_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   END LOOP;
END;


-- LOANACNTS

/*
DELETE FROM LOANACNTS WHERE LNACNT_ENTITY_NUM = 1
AND  LNACNT_INTERNAL_ACNUM IN (
SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE WHERE SL <> 1 ) ;
*/
DECLARE
   V_COUNT    NUMBER := 0;
   V_AC_NUM   NUMBER;
BEGIN
   FOR IDX
      IN (  SELECT * FROM ACTUAL_ACCOUNT_UPDATE)
   LOOP
   BEGIN 
   
      IF IDX.SL = 1
      THEN
         V_AC_NUM := IDX.IACLINK_INTERNAL_ACNUM;
      END IF;

      UPDATE LOANACNTS
         SET LNACNT_INTERNAL_ACNUM = V_AC_NUM
       WHERE     LNACNT_ENTITY_NUM = 1
             AND LNACNT_INTERNAL_ACNUM = IDX.IACLINK_INTERNAL_ACNUM;
   EXCEPTION WHEN DUP_VAL_ON_INDEX THEN 
   CONTINUE ;     
   END ;
   END LOOP;
END;