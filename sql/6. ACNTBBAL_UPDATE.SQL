------ MONTH_WISE_CR_DR_SUM.SQL ---------


WITH MONTHS_WISE_AC_BALANCE
AS(------------------- FORMONTHS WISE TRANSACTION SUMMATION --------------------
SELECT TRAN_INTERNAL_ACNUM,TRANSACTION_YEAR,TRANSACTION_MONTHS,SUM(CREDIT_AMOUNT) MONTHS_WISE_CREDIT_SUM,SUM(DEBIT_AMOUNT) MONTHS_WISE_DEBIT_SUM, 
SUM(CREDIT_TRANSACTION) MONTHS_WISE_CREDIT_TRAN, SUM(DEBIT_TRANSACTION) MONTHS_WISE_DEBIT_TRAN,
 SUM(PRIN_AC_AMT_CR) MONTHS_WISE_PRIN_AC_AMT_CR,SUM(PRIN_AC_AMT_DR) MONTHS_WISE_PRIN_AC_AMT_DR,SUM(INTRD_AC_AMT_CR) MONTHS_WISE_INTRD_AC_AMT_CR,
 SUM(INTRD_AC_AMT_DR) MONTHS_WISE_INTRD_AC_AMT_DR,SUM(CHARGE_AC_AMT_CR) MONTHS_WISE_CHARGE_AC_AMT_CR, SUM(CHARGE_AC_AMT_DR) MONTHS_WISE_CHARGE_AC_AMT_DR
FROM(
(
------------------- FORMONTHS WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TO_CHAR(ADD_MONTHS(TR.TRAN_DATE_OF_TRAN, 1),'MM') TRANSACTION_MONTHS,
TO_CHAR(ADD_MONTHS(TR.TRAN_DATE_OF_TRAN, 1),'YYYY') TRANSACTION_YEAR ,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2015 TR LEFT OUTER JOIN TRANADV2015 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0)
UNION ALL
(
------------------- FOR MONTHS WISE TRANSACTION SELECTION --------------------
SELECT /*+ FULL(TA) PARALLEL(TA, DEFAULT,DEFAULT)  PARALLEL(TR, DEFAULT,DEFAULT) */ TR.TRAN_INTERNAL_ACNUM,TO_CHAR(ADD_MONTHS(TR.TRAN_DATE_OF_TRAN, 1),'MM') TRANSACTION_MONTHS,
TO_CHAR(ADD_MONTHS(TR.TRAN_DATE_OF_TRAN, 1),'YYYY') TRANSACTION_YEAR ,TRAN_BATCH_NUMBER, TRAN_BATCH_SL_NUM, TRAN_DB_CR_FLG,TRAN_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) DEBIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRAN_AMOUNT,0) ELSE 0 END ) CREDIT_AMOUNT,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  1 ELSE 0 END ) CREDIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  1 ELSE 0 END ) DEBIT_TRANSACTION,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_PRIN_AC_AMT,0) ELSE 0 END ) PRIN_AC_AMT_CR,  
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_INTRD_AC_AMT,0) ELSE 0 END ) INTRD_AC_AMT_CR,
(CASE WHEN TRAN_DB_CR_FLG='D' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_DR,
(CASE WHEN TRAN_DB_CR_FLG='C' THEN  NVL(TRANADV_CHARGE_AC_AMT,0) ELSE 0 END ) CHARGE_AC_AMT_CR
FROM TRAN2016 TR LEFT OUTER JOIN TRANADV2016 TA
ON (TA.TRANADV_ENTITY_NUM=TR.TRAN_ENTITY_NUM
AND TA.TRANADV_BRN_CODE=TR.TRAN_BRN_CODE
AND TA.TRANADV_DATE_OF_TRAN=TR.TRAN_DATE_OF_TRAN
AND TA.TRANADV_BATCH_NUMBER=TR.TRAN_BATCH_NUMBER
AND TA.TRANADV_BATCH_SL_NUM=TR.TRAN_BATCH_SL_NUM)
WHERE TR.TRAN_AUTH_ON IS NOT NULL
AND TR.TRAN_INTERNAL_ACNUM IN (SELECT IACLINK_INTERNAL_ACNUM FROM ACTUAL_ACCOUNT_UPDATE)
AND TR.TRAN_INTERNAL_ACNUM<>0 
AND TR.TRAN_AMOUNT<>0))
GROUP BY TRAN_INTERNAL_ACNUM,TRANSACTION_YEAR,TRANSACTION_MONTHS)
SELECT INT_AC_NO, TRANSACTION_YEAR,   TRANSACTION_MONTHS, 
SUM(MW_CR_SUM) OVER (PARTITION BY INT_AC_NO ORDER BY INT_AC_NO, TRANSACTION_YEAR, TRANSACTION_MONTHS) MW_CR_SUM,
SUM(MW_DR_SUM) OVER (PARTITION BY INT_AC_NO ORDER BY INT_AC_NO, TRANSACTION_YEAR, TRANSACTION_MONTHS) MW_DR_SUM
FROM( 
SELECT 
TRAN_INTERNAL_ACNUM INT_AC_NO,  
TRANSACTION_YEAR, 
TRANSACTION_MONTHS, 
MONTHS_WISE_CREDIT_TRAN MW_NO_OF_CR, 
MONTHS_WISE_DEBIT_TRAN MW_NO_OF_DR, 
CREDIT_TRAN_SUMMATION TOT_NO_OF_CR, 
DEBIT_TRAN_SUMMATION TOT_NO_OF_DR, 
MONTHS_WISE_CREDIT_SUM MW_CR_SUM, 
MONTHS_WISE_DEBIT_SUM MW_DR_SUM, 
--CREDIT_OPENING_BALANCE, DEBIT_OPENING_BALANCE,
NVL(LAG(ACCOUNT_CURRENT_BALANCE) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM, TRANSACTION_YEAR,TRANSACTION_MONTHS),0) MW_OP_BAL,
 ACCOUNT_CURRENT_BALANCE MW_CLS_BAL,
---------------------  LOAN ACCOUNT PRENCIPAL BALANCE CALCULATION ---------------
MONTHS_WISE_PRIN_AC_AMT_CR MW_PRIN_CR_SUM, 
MONTHS_WISE_PRIN_AC_AMT_DR MW_PRIN_DR_SUM, 
--CREDIT_OPENING_PRIN_BALANCE, DEBIT_OPENING_PRIN_BALANCE,
NVL(LAG(PRIN_OUTSTANDING) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM, TRANSACTION_YEAR,TRANSACTION_MONTHS),0) MW_PRIN_OP_BAL,
 PRIN_OUTSTANDING MW_PRIN_CLS_BAL,
---------------------  LOAN ACCOUNT INTEREST BALANCE CALCULATION ---------------
MONTHS_WISE_INTRD_AC_AMT_CR MW_INT_CR_SUM, 
MONTHS_WISE_INTRD_AC_AMT_DR MW_INT_DR_SUM,
-- CREDIT_OPENING_INTRD_BALANCE, DEBIT_OPENING_INTRD_BALANCE, 
NVL(LAG(INTRD_OUTSTANDING) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM, TRANSACTION_YEAR,TRANSACTION_MONTHS),0) MW_INT_OP_BAL,
 INTRD_OUTSTANDING MW_INT_CLS_BAL ,
 ---------------------  LOAN ACCOUNT CHARGE BALANCE CALCULATION ---------------
 MONTHS_WISE_CHARGE_AC_AMT_CR MW_CHG_CR_SUM, 
 MONTHS_WISE_CHARGE_AC_AMT_DR MW_CHG_DR_SUM, 
--CREDIT_OPENING_CHARGE_BALANCE, DEBIT_OPENING_CHARGE_BALANCE, 
NVL(LAG(INTRD_OUTSTANDING) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM, TRANSACTION_YEAR,TRANSACTION_MONTHS),0) MW_CHG_OP_BAL,
CHARGE_OUTSTANDING MW_CHG_CLS_BAL
FROM(
------------------ START SELECT QUERY FROM MONTHS WISE ACCOUNT BALANCE ---------------------
SELECT 
TRAN_INTERNAL_ACNUM , 
TRANSACTION_YEAR,
TRANSACTION_MONTHS, 
MONTHS_WISE_CREDIT_TRAN, 
MONTHS_WISE_DEBIT_TRAN, 
SUM(MONTHS_WISE_CREDIT_TRAN) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) CREDIT_TRAN_SUMMATION,
SUM(MONTHS_WISE_DEBIT_TRAN) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) DEBIT_TRAN_SUMMATION,
MONTHS_WISE_CREDIT_SUM,
MONTHS_WISE_DEBIT_SUM, 
SUM(MONTHS_WISE_CREDIT_SUM) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) CREDIT_OPENING_BALANCE,
SUM(MONTHS_WISE_DEBIT_SUM) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) DEBIT_OPENING_BALANCE,
SUM(MONTHS_WISE_CREDIT_SUM-MONTHS_WISE_DEBIT_SUM) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) ACCOUNT_CURRENT_BALANCE,
------------------ START CALCULATION FOR LOAN TYPES OF ACCOUNT --------------------------
------------------ FOR PRENCIPAL TRANSACTION AMOUNT -------------------------------------
MONTHS_WISE_PRIN_AC_AMT_CR, 
MONTHS_WISE_PRIN_AC_AMT_DR,
SUM(MONTHS_WISE_PRIN_AC_AMT_CR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) CREDIT_OPENING_PRIN_BALANCE,
SUM(MONTHS_WISE_PRIN_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) DEBIT_OPENING_PRIN_BALANCE,
SUM(MONTHS_WISE_PRIN_AC_AMT_CR-MONTHS_WISE_PRIN_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) PRIN_OUTSTANDING,
------------------ FOR INTEREST TRANSACTION AMOUNT -------------------------------------
MONTHS_WISE_INTRD_AC_AMT_CR,
MONTHS_WISE_INTRD_AC_AMT_DR,
SUM(MONTHS_WISE_INTRD_AC_AMT_CR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) CREDIT_OPENING_INTRD_BALANCE,
SUM(MONTHS_WISE_INTRD_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) DEBIT_OPENING_INTRD_BALANCE,
SUM(MONTHS_WISE_INTRD_AC_AMT_CR-MONTHS_WISE_INTRD_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) INTRD_OUTSTANDING,
------------------ FOR CHARGE TRANSACTION AMOUNT -------------------------------------
MONTHS_WISE_CHARGE_AC_AMT_CR,
MONTHS_WISE_CHARGE_AC_AMT_DR,
SUM(MONTHS_WISE_CHARGE_AC_AMT_CR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) CREDIT_OPENING_CHARGE_BALANCE,
SUM(MONTHS_WISE_CHARGE_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) DEBIT_OPENING_CHARGE_BALANCE,
SUM(MONTHS_WISE_CHARGE_AC_AMT_CR-MONTHS_WISE_CHARGE_AC_AMT_DR) OVER (PARTITION BY TRAN_INTERNAL_ACNUM ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR,TRANSACTION_MONTHS) CHARGE_OUTSTANDING
FROM MONTHS_WISE_AC_BALANCE
ORDER BY TRAN_INTERNAL_ACNUM , TRANSACTION_YEAR, TRANSACTION_MONTHS ));