CREATE OR REPLACE PACKAGE PKG_TFDASHBOARD_DATA IS
  TYPE REC_RETURN_CLIENT_INFO IS RECORD(
    BRANCH_CODE               NUMBER(6),
    CLIENT_CODE               NUMBER(12),
    PARENT_LIM_NUM            NUMBER(6),
    PARENT_LIM_AMT            NUMBER(18, 3),
    TOTAL_OLC_CASH_LIAB       NUMBER(18, 3),
    TOTAL_OLC_BTB_CASH_LIAB   NUMBER(18, 3),
    TOTAL_CASH_ACCEP_LIAB     NUMBER(18, 3),
    TOTAL_CASH_BTB_ACCEP_LIAB NUMBER(18, 3),
    PAD_OS_CASH_AMT           NUMBER(18, 3),
    PAD_OS_BTB_CASH_AMT       NUMBER(18, 3),
    EDF_OS_AMT                NUMBER(18, 3),
    FORCED_LOAN_OS_AMT        NUMBER(18, 3),
    LTR_OS_AMT                NUMBER(18, 3),
    LIM_OS_AMT                NUMBER(18, 3),
    SUNDRY_OS_AMT             NUMBER(18, 3),
    TOTAL_MARGIN_AMT          NUMBER(18, 3),
    LIMIT_AVL_AMT             NUMBER(18, 3),
    LIMIT_EXP_DATE            DATE);

  TYPE TYPE_RETURN_TABLE IS TABLE OF REC_RETURN_CLIENT_INFO;

  TYPE REC_RETURN_EXP_BILL_INFO IS RECORD(
    BILL_ENTITY_NUM        OBILL.OBILL_ENTITY_NUM%TYPE,
    BILL_BRN               OBILL.OBILL_BRN_CODE%TYPE,
    BILL_BRN_NAME          MBKBRN.MBKBRN_NAME%TYPE,
    BILL_TYPE              OBILL.OBILL_TYPE%TYPE,
    BILL_YEAR              OBILL.OBILL_YEAR%TYPE,
    BILL_SL                OBILL.OBILL_NO%TYPE,
    BILL_REF_NO            OBILL.OBILL_CORR_REF_NO%TYPE,
    BILL_DATE              OBILL.OBILL_DATE%TYPE,
    BILL_CURR              OBILL.OBILL_BILL_CURR%TYPE,
    BILL_AMOUNT            NUMBER(18, 3) := 0,
    CONV_RATE              OBILL.OBILL_CONV_RATE%TYPE,
    COLLECTION_LIAB        NUMBER(18, 3) := 0,
    BILL_TO_BNK            OBILLMISC.OBMISC_DOC_SENT_TO_BNK%TYPE,
    BILL_TO_BNK_NAME       BANKCD.BANKCD_NAME%TYPE,
    BILL_TO_BRNNAME        MBRN.MBRN_NAME%TYPE,
    DUE_DATE               VARCHAR2(1000),
    LCORD_BRN              OBILLLC.OBL_LC_BRN_CODE%TYPE,
    LCORD_TYPE             OBILLLC.OBL_LC_TYPE%TYPE,
    LCORD_YEAR             OBILLLC.OBL_LC_YEAR%TYPE,
    LCORD_SL               OBILLLC.OBL_LC_SL%TYPE,
    LCORD_REF              ILCE.ILC_CORR_REF%TYPE,
    DOC_CREDIT_NUM         ILCE.ILC_DOC_CRDT_NO%TYPE,
    DOC_CREDIT_DATE        ILCE.ILC_DOC_CRDT_DATE%TYPE,
    IMPORTER_NAME          ILCE.ILC_APPLICANT_NAME%TYPE,
    IMPORTER_COUNTRY       CNTRY.CNTRY_NAME%TYPE,
    EXPORTER_CUST_NO       OBILL.OBILL_CLIENT_CODE%TYPE,
    EXPORTER_NAME          CLIENTS.CLIENTS_NAME%TYPE,
    PAYMENT_IN_FC          NUMBER(18, 3) := 0,
    PAYMENT_AMT_IN_BASE    NUMBER(18, 3) := 0,
    OUTSTD_FC              NUMBER(18, 3) := 0,
    OUTSTD_BASE            NUMBER(18, 3) := 0,
    SHIPPER_NAME           OBILLSHIP.OBS_SHIPPER_NAME%TYPE,
    SHIPPER_ADDRESS        VARCHAR2(2000),
    SHIPPER_COUNTRY        OBILLSHIP.OBS_SHIPPER_CNTRY%TYPE,
    LC_ISSUING_BNK         OBILLLC.OBL_LC_OPN_BNK%TYPE,
    LC_ISSUING_BRANCH      OBILLLC.OBL_LC_OPN_BRN%TYPE,
    LC_ISSUING_COUNTRY     OBILLLC.OBL_LC_CNTRY%TYPE,
    LC_OR_ORDER_AMOUNT     NUMBER(18, 3) := 0,
    LC_OR_ORDER_DATE       OBILLLC.OBL_LC_DATE%TYPE,
    LAST_DATE_FOR_SHIPMENT OBILLLC.OBL_LAST_SHIP_DATE%TYPE,
    LAST_DATE_OF_NEG       OBILLLC.OBL_LAST_DATE_OF_NEG%TYPE,
    DRAWEE_CODE            OBILL.OBILL_DRAWEE_CODE%TYPE,
    DRAWEE_NAME            OBILL.OBILL_DRAWEE_NAME%TYPE,
    DRAWEE_ADDRESS         VARCHAR2(2000),
    DRAWEE_CNTRY           OBILL.OBILL_DRAWEE_CNTRY%TYPE,
    CONSIGNEE_NAME         OBILL.OBILL_CONSIGNEE_NAME%TYPE,
    CONSIGNEE_ADDRESS      VARCHAR2(2000),
    CONSIGNEE_CNTRY        OBILL.OBILL_CONSIGNEE_CNTRY%TYPE,
    EXPORT_DEST_CNTRY      OBILL.OBILL_REIMB_CNTRY%TYPE,
    INVOICE_NO             OBILLINV.OBI_INV_NO%TYPE,
    INVOICE_DATE           OBILLINV.OBI_INV_DATE%TYPE,
    INVOICE_AMT            NUMBER(18, 3) := 0,
    INVOICE_TERMS          OBILLINV.OBI_INV_TERMS%TYPE,
    INVOICE_DISCOUNT       NUMBER(18, 3) := 0,
    TENOR_TYPE             VARCHAR2(20),
    EXPORT_FROM            VARCHAR2(50),
    DOC_TYPE               OBILLTD.OBTD_TRANS_DOC_TYPE%TYPE,
    DOC_MAST_NO            OBILLTD.OBTD_TRANS_DOC_MAST_NO%TYPE,
    DOC_DATE               OBILLTD.OBTD_TRANS_DOC_DATE%TYPE,
    SHIPCMP_CODE           OBILLTD.OBTD_SHIPCMP_CODE%TYPE,
    VESSEL_NAME            OBILLTD.OBTD_VESSEL_NAME%TYPE,
    FREIGHT_TERMS          OBILLTD.OBTD_FREIGHT_TERMS%TYPE,
    FREIGHT_CURR           OBILLTD.OBTD_FREIGHT_CURR%TYPE,
    FREIGHT_AMOUNT         NUMBER(18, 3) := 0,
    SHIP_FRM_PORT          OBILLSD.OBSD_SHIP_FRM_PORT_CD%TYPE,
    SHIP_FRM_PORT_NAME     OBILLSD.OBSD_SHIP_FRM_PORT_NAME%TYPE,
    DEST_PORT              OBILLSD.OBSD_DEST_PORT_CD%TYPE,
    DEST_PORT_NAME         OBILLSD.OBSD_DEST_PORT_NAME%TYPE,
    SHIPMENT_MODE          OBILLSD.OBSD_SHIP_MODE%TYPE,
    HS_CODE                OBILLCMDY.OBCD_COMM_CODE%TYPE,
    HSCODE_DESCN           VARCHAR2(2000),
    COMMODITY_CODE         OBILLCMDY.OBCD_ITC_CODE%TYPE,
    EXP_FORM_NO            OBILLGR.OBGR_FORM_NO%TYPE,
    EXP_PORT_CODE          OBILLGR.OBGR_PORT_CODE%TYPE,
    EXP_CUSTOMS_CODE       OBILLGR.OBGR_CUSTOMS_CD%TYPE,
    EXP_FORM_AMOUNT        NUMBER(18, 3) := 0,
    SHIPPING_BILL_NO       OBILLGR.OBGR_SHIP_BILL_NO%TYPE,
    SHIPPING_BILL_DATE     OBILLGR.OBGR_SHIP_BILL_DATE%TYPE,
    FB_REF_NO              OBACK.OBACK_FB_REF_NO%TYPE,
    MATURITY_DATE          OBACK.OBACK_FB_REF_DATED%TYPE);
  TYPE TYPE_RETURN_TABLE_EXP_BILL IS TABLE OF REC_RETURN_EXP_BILL_INFO;

  FUNCTION CIENT_DETAILS_INFO(P_ENTITYNUM   NUMBER,
                              P_BRANCH_CODE NUMBER DEFAULT '',
                              P_CLIENT_CODE NUMBER DEFAULT '',
                              P_ASON_DATE   DATE) RETURN TYPE_RETURN_TABLE
    PIPELINED;
  FUNCTION EXPORT_BILL_INFO_DETAILS(P_ENTITY_NUM   IN NUMBER,
                                    P_BRN_CODE     IN NUMBER,
                                    P_ORDER_OPTION IN VARCHAR2,
                                    P_LC_TYPE      IN VARCHAR2,
                                    P_LC_YEAR      IN NUMBER,
                                    P_LC_SERIAL    IN NUMBER,
                                    P_FROM_DATE    IN DATE,
                                    P_ASON_DATE    IN DATE,
                                    P_CUST_CODE    IN VARCHAR2,
                                    P_LOC_FOR_FLAG IN CHAR DEFAULT NULL) RETURN TYPE_RETURN_TABLE_EXP_BILL
    PIPELINED;
END PKG_TFDASHBOARD_DATA;
/
CREATE OR REPLACE PACKAGE BODY PKG_TFDASHBOARD_DATA IS
  W_SQL                 CLOB;
  W_CBD                 DATE;
  W_AMT                 NUMBER(18, 3);
  T_AMOUNT              NUMBER(18, 3);
  V_TOTAL_MARGIN_AMT    NUMBER(18, 3);
  V_SUNDRY_OS           NUMBER(18, 3);
  V_SUNDRY_OS_AMT       NUMBER(18, 3);
  V_PARENT_LIM_AMT      NUMBER(18, 3);
  V_PARENT_LIM_EXP_DATE DATE;
  V_SAUTH_CODE          VARCHAR2(6);
  MYEXCEPTION EXCEPTION;

  TYPE CLIENTCODEINFO IS RECORD(
    CLIENT_CODE     NUMBER(12),
    BRANCH_CODE     NUMBER(6),
    GROUP_LIMIT_NUM NUMBER(6));

  TYPE CLIENTCODETBL IS TABLE OF CLIENTCODEINFO INDEX BY PLS_INTEGER;

  V_COLL_CLIENT CLIENTCODETBL;

  TYPE LIMITINFO IS RECORD(
    LIMIT_NO       NUMBER(6),
    LIMIT_EXP_DATE DATE,
    LIMIT_AMT      NUMBER(18, 3),
    LIMIT_SEC_AUTH VARCHAR2(6));

  TYPE LIMITINFOTABLE IS TABLE OF LIMITINFO INDEX BY PLS_INTEGER;

  V_COLL_LIMIT LIMITINFOTABLE;

  TYPE REC_PROD_CODE IS RECORD(
    PRODUCT_CODE NUMBER(4));

  TYPE TY_PRODUCTCODE IS TABLE OF REC_PROD_CODE INDEX BY PLS_INTEGER;

  V_PRODUCT_COLL TY_PRODUCTCODE;

  TYPE ACCOUNT IS RECORD(
    ACCOUNT_NUM NUMBER(14));

  TYPE ACCOUNTTABLE IS TABLE OF ACCOUNT INDEX BY PLS_INTEGER;

  V_COLL_ACCOUNT ACCOUNTTABLE;

  FUNCTION CIENT_DETAILS_INFO(P_ENTITYNUM   NUMBER,
                              P_BRANCH_CODE NUMBER DEFAULT '',
                              P_CLIENT_CODE NUMBER DEFAULT '',
                              P_ASON_DATE   DATE) RETURN TYPE_RETURN_TABLE
    PIPELINED IS
    RETURN_REC_TABLE REC_RETURN_CLIENT_INFO;
    V_SQL            CLOB;
  
    PROCEDURE CLEAR_DATA IS
    BEGIN
      V_PARENT_LIM_AMT      := '';
      V_PARENT_LIM_EXP_DATE := '';
      V_SAUTH_CODE          := '';
      V_SUNDRY_OS_AMT       := 0;
    END CLEAR_DATA;
  
    PROCEDURE UNIVERSAL_OS_CALCULATION(W_ENTITY      IN NUMBER,
                                       U_DATE        IN DATE,
                                       VPRODUCT_COLL IN TY_PRODUCTCODE,
                                       CUST_CODE     IN NUMBER,
                                       LIMIT_NUM     IN NUMBER) IS
    BEGIN
      W_AMT    := 0;
      T_AMOUNT := 0;
      W_CBD    := PKG_PB_GLOBAL.FN_GET_CURR_BUS_DATE(W_ENTITY);
    
      FOR ID IN 1 .. VPRODUCT_COLL.COUNT LOOP
        FOR IR IN (SELECT NVL(SUM(FN_GET_ASON_ACBAL(A.ACNTS_ENTITY_NUM, A.ACNTS_INTERNAL_ACNUM, A.ACNTS_CURR_CODE, TO_CHAR(U_DATE), TO_CHAR(W_CBD))),
                               0) T_AMOUNT
                   FROM   ACNTS A
                   JOIN   ACASLLDTL AD
                   ON     (A.ACNTS_ENTITY_NUM = AD.ACASLLDTL_ENTITY_NUM AND A.ACNTS_INTERNAL_ACNUM = AD.ACASLLDTL_INTERNAL_ACNUM)
                   JOIN   LIMITLINE L
                   ON     (AD.ACASLLDTL_ENTITY_NUM = L.LMTLINE_ENTITY_NUM AND AD.ACASLLDTL_CLIENT_NUM = L.LMTLINE_CLIENT_CODE AND
                          AD.ACASLLDTL_LIMIT_LINE_NUM = L.LMTLINE_NUM)
                   WHERE  A.ACNTS_CLIENT_NUM = CUST_CODE
                   AND    L.LMTLINE_SUB_LIMIT_LINE = LIMIT_NUM
                   AND    A.ACNTS_CLOSURE_DATE IS NULL
                   AND    A.ACNTS_PROD_CODE = VPRODUCT_COLL(ID).PRODUCT_CODE) LOOP
          W_AMT := W_AMT + NVL(IR.T_AMOUNT, 0);
        END LOOP;
      END LOOP;
    END UNIVERSAL_OS_CALCULATION;
  
    PROCEDURE UNIVERSAL_LIMIT_FINDER(LIMIT_NUM IN NUMBER,
                                     CUST_CODE IN NUMBER) IS
    BEGIN
      W_SQL := 'SELECT LM.LMTLINE_NUM,
                                            LM.LMTLINE_LIMIT_EXPIRY_DATE,
                                            LM.LMTLINE_SANCTION_AMT,
                                            LM.LMTLINE_SAUTH_CODE
                                            FROM LIMITLINE LM WHERE LM.LMTLINE_NUM =' || LIMIT_NUM || '
                                            AND LM.LMTLINE_CLIENT_CODE =' || CUST_CODE;
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_COLL_LIMIT;
    
      V_PARENT_LIM_AMT      := V_COLL_LIMIT(1).LIMIT_AMT;
      V_PARENT_LIM_EXP_DATE := V_COLL_LIMIT(1).LIMIT_EXP_DATE;
      V_SAUTH_CODE          := V_COLL_LIMIT(1).LIMIT_SEC_AUTH;
    END UNIVERSAL_LIMIT_FINDER;
  
  BEGIN
    V_SQL := 'SELECT DISTINCT CORPCLAH_CLIENT_CODE, CLIENTS_HOME_BRN_CODE, L.LMTLINE_NUM FROM CORPCLIENTSAHIST C
           JOIN CLIENTS CL
            ON (C.CORPCLAH_CLIENT_CODE = CL.CLIENTS_CODE)
           JOIN LIMITLINE L
            ON (CL.CLIENTS_CODE = L.LMTLINE_CLIENT_CODE)
           WHERE L.LMTLINE_ENTITY_NUM = ' || P_ENTITYNUM || '
           AND L.LMTLINE_SUB_LIMIT_LINE = 0
           AND L.LMTLINE_GROUP_LEVEL_LIMIT = ''1''';
  
    IF P_BRANCH_CODE IS NOT NULL THEN
      V_SQL := V_SQL || ' AND CL.CLIENTS_HOME_BRN_CODE=' || P_BRANCH_CODE;
    END IF;
  
    IF P_CLIENT_CODE IS NOT NULL THEN
      V_SQL := V_SQL || ' AND CL.CLIENTS_CODE=' || P_CLIENT_CODE;
    END IF;
  
    V_SQL := V_SQL || ' ORDER BY CLIENTS_HOME_BRN_CODE,CORPCLAH_CLIENT_CODE,LMTLINE_NUM';
  
    EXECUTE IMMEDIATE V_SQL BULK COLLECT
      INTO V_COLL_CLIENT;
  
    FOR I IN 1 .. V_COLL_CLIENT.COUNT LOOP
      UNIVERSAL_LIMIT_FINDER(V_COLL_CLIENT(I).GROUP_LIMIT_NUM, V_COLL_CLIENT(I).CLIENT_CODE);
      RETURN_REC_TABLE.BRANCH_CODE    := V_COLL_CLIENT(I).BRANCH_CODE;
      RETURN_REC_TABLE.CLIENT_CODE    := V_COLL_CLIENT(I).CLIENT_CODE;
      RETURN_REC_TABLE.PARENT_LIM_NUM := V_COLL_CLIENT(I).GROUP_LIMIT_NUM;
      RETURN_REC_TABLE.PARENT_LIM_AMT := V_PARENT_LIM_AMT;
      RETURN_REC_TABLE.LIMIT_EXP_DATE := V_PARENT_LIM_EXP_DATE;
    
      ---------------------------CASH LC LIABILITY--------------------
      W_SQL := 'SELECT  TFCUST_CASH_LC_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_CASH_LC_PRODUCT IS NOT NULL
                UNION
                SELECT  TFCUST_OTH_LC_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_OTH_LC_PRODUCT IS NOT NULL';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.TOTAL_OLC_CASH_LIAB := W_AMT;
    
      ---------------------------BTB LC LIABILITY--------------------
      W_SQL := 'SELECT  TFCUST_BTB_LC_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_BTB_LC_PRODUCT IS NOT NULL';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.TOTAL_OLC_BTB_CASH_LIAB := W_AMT;
    
      --------------------------CASH LC ACCEPTED BILL LIABILITY--------------------------------
      W_SQL := 'SELECT  TFCUST_CASH_BILL_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_CASH_BILL_PRODUCT IS NOT NULL
                UNION
                SELECT  TFCUST_OTH_BILL_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_OTH_BILL_PRODUCT IS NOT NULL';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.TOTAL_CASH_ACCEP_LIAB := W_AMT;
    
      --------------------------BTB LC ACCEPTED BILL LIABILITY--------------------------------
      W_SQL := 'SELECT  TFCUST_BTB_BILL_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_BTB_BILL_PRODUCT IS NOT NULL ';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.TOTAL_CASH_BTB_ACCEP_LIAB := W_AMT;
    
      -------------------------PAD CASH LC OUTSTANDING-------------------------------------
      W_SQL := 'SELECT  TFCUST_CASH_PAD_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_CASH_PAD_PRODUCT IS NOT NULL ';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.PAD_OS_CASH_AMT := W_AMT;
    
      -------------------------PAD BTB LC OUTSTANDING-------------------------------------
      W_SQL := 'SELECT  TFCUST_BTB_PAD_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_BTB_PAD_PRODUCT IS NOT NULL ';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.PAD_OS_BTB_CASH_AMT := W_AMT;
    
      ----------------------------EDF OUTSTANDING-----------------------------
      W_SQL := 'SELECT  TFCUST_EDF_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_EDF_PRODUCT IS NOT NULL ';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.EDF_OS_AMT := W_AMT;
    
      ----------------------------FORCE LOAN OUTSTANDING-----------------------------
      W_SQL := 'SELECT  TFCUST_FORCED_LOAN_CODE FROM TFCUSTSTAT WHERE TFCUST_FORCED_LOAN_CODE IS NOT NULL';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.FORCED_LOAN_OS_AMT := W_AMT;
    
      ----------------------------LTR OUTSTANDING-----------------------------
      W_SQL := 'SELECT  TFCUST_LTR_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_LTR_PRODUCT IS NOT NULL ';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.LTR_OS_AMT := W_AMT;
    
      ----------------------------LIM OUTSTANDING-----------------------------
      W_SQL := 'SELECT  TFCUST_LIM_PRODUCT FROM TFCUSTSTAT WHERE TFCUST_LIM_PRODUCT IS NOT NULL ';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_PRODUCT_COLL;
    
      UNIVERSAL_OS_CALCULATION(P_ENTITYNUM, P_ASON_DATE, V_PRODUCT_COLL, V_COLL_CLIENT(I).CLIENT_CODE, V_COLL_CLIENT(I).GROUP_LIMIT_NUM);
      RETURN_REC_TABLE.LIM_OS_AMT := W_AMT;
    
      ----------------------------SUNDRY OUTSTANDING AMOUNT----------------
      V_SUNDRY_OS := 0;
      W_SQL       := 'SELECT DISTINCT F.FCBALI_INTACCNO INTERNAL_ACC_NUM FROM FCBALINFLOWLED F
             WHERE F.FCBALI_SURROGATE_NO IN
             (SELECT CASE
                       WHEN BTBBD_BY_ORDER =''1'' THEN
                        (SELECT DISTINCT TO_CHAR(P.PCLCORD_SURROGATE_KEY)
                           FROM PCLCORD P
                          WHERE P.PCLCORD_ENTITY_NUM = BTBBD_ENTITY_NUM
                            AND P.PCLCORD_BR_CODE = BTBBD_BRN_CODE
                            AND P.PCLCORD_ORDER_LODGE_TYPE = BTBBD_ORDER_TYPE
                            AND P.PCLCORD_PC_LODGE_YEAR = BTBBD_ORDER_YEAR
                            AND P.PCLCORD_PC_LODGE_REF_SL = BTBBD_ORDER_SL)
                       WHEN BTBBD_BY_ILC = ''1'' THEN
                        (SELECT DISTINCT TO_CHAR(I.ILC_CORR_REF)
                           FROM ILCE I
                          WHERE I.ILCE_ENTITY_NUM = BTBBD_ENTITY_NUM
                            AND I.ILC_BRN_CODE = BTBBD_BRN_CODE
                            AND I.ILC_INW_LC_CODE = BTBBD_ILC_TYPE
                            AND I.ILC_ENTRY_YEAR = BTBBD_ILC_YEAR
                            AND I.ILC_ENTRY_SL = BTBBD_ILC_SL)
                     END SURROGATE_KEY
                FROM (SELECT DISTINCT B.BTBBD_ENTITY_NUM,
                                      O.OLC_CUST_NUM,
                                      B.BTBBD_BRN_CODE,
                                      B.BTBBD_BY_ORDER,
                                      B.BTBBD_ORDER_TYPE,
                                      B.BTBBD_ORDER_YEAR,
                                      B.BTBBD_ORDER_SL,
                                      B.BTBBD_BY_ILC,
                                      B.BTBBD_ILC_TYPE,
                                      B.BTBBD_ILC_YEAR,
                                      B.BTBBD_ILC_SL
                        FROM OLC O
                        JOIN BTBBACKINGDTLS B
                          ON (O.OLC_ENTITY_NUM = B.BTBBD_ENTITY_NUM AND
                             O.OLC_BRN_CODE = B.BTBBD_BRN_CODE AND
                             O.OLC_LC_TYPE = B.BTBBD_TYPE AND
                             O.OLC_LC_YEAR = B.BTBBD_YEAR AND
                             O.OLC_LC_SL = B.BTBBD_SERIAL)
                       WHERE O.OLC_ENTITY_NUM =  ' || P_ENTITYNUM || ' 
                         AND O.OLC_BRN_CODE = ' || V_COLL_CLIENT(I).BRANCH_CODE || '
                         AND O.OLC_CUST_NUM = ' || V_COLL_CLIENT(I).CLIENT_CODE || '
                         AND O.OLC_AUTH_ON IS NOT NULL
                         AND O.OLC_REJ_ON IS NULL
                         AND O.OLC_CUST_LIAB_ACC IN
                             (SELECT DISTINCT A.ACNTS_INTERNAL_ACNUM
                                FROM ACNTS A
                                JOIN ACASLLDTL AD
                                  ON (A.ACNTS_ENTITY_NUM = AD.ACASLLDTL_ENTITY_NUM AND
                                     A.ACNTS_INTERNAL_ACNUM =
                                     AD.ACASLLDTL_INTERNAL_ACNUM)
                                JOIN LIMITLINE L
                                  ON (AD.ACASLLDTL_ENTITY_NUM = L.LMTLINE_ENTITY_NUM AND
                                     AD.ACASLLDTL_CLIENT_NUM =
                                     L.LMTLINE_CLIENT_CODE AND
                                     AD.ACASLLDTL_LIMIT_LINE_NUM = L.LMTLINE_NUM)
                               WHERE A.ACNTS_ENTITY_NUM =' || P_ENTITYNUM || '
                                 AND A.ACNTS_BRN_CODE = ' || V_COLL_CLIENT(I).BRANCH_CODE || '
                                 AND A.ACNTS_CLIENT_NUM = ' || V_COLL_CLIENT(I).CLIENT_CODE || '
                                 AND L.LMTLINE_SUB_LIMIT_LINE = ' || V_COLL_CLIENT(I).GROUP_LIMIT_NUM || '
                                 AND A.ACNTS_CLOSURE_DATE IS NULL
                                 AND A.ACNTS_PROD_CODE IN
                                     (SELECT TFCUST_CASH_LC_PRODUCT
                                        FROM TFCUSTSTAT
                                       WHERE TFCUST_CASH_LC_PRODUCT IS NOT NULL
                                      UNION
                                      SELECT TFCUST_OTH_LC_PRODUCT
                                        FROM TFCUSTSTAT
                                       WHERE TFCUST_OTH_LC_PRODUCT IS NOT NULL
                                      UNION
                                      SELECT TFCUST_BTB_LC_PRODUCT
                                        FROM TFCUSTSTAT
                                       WHERE TFCUST_BTB_LC_PRODUCT IS NOT NULL))))';
    
      EXECUTE IMMEDIATE W_SQL BULK COLLECT
        INTO V_COLL_ACCOUNT;
    
      IF V_COLL_ACCOUNT.COUNT > 0 THEN
        FOR FID IN 1 .. V_COLL_ACCOUNT.COUNT LOOP
          DBMS_OUTPUT.PUT_LINE(V_COLL_ACCOUNT(FID).ACCOUNT_NUM);
          W_SQL := 'SELECT NVL(SUM(FN_GET_ASON_ACBAL(ACNTS.ACNTS_ENTITY_NUM,
                                      ' || V_COLL_ACCOUNT(FID).ACCOUNT_NUM || ',
                                      ACNTS.ACNTS_CURR_CODE,
                                      TO_CHAR(''' || P_ASON_DATE || '''),
                                      TO_CHAR(''' || P_ASON_DATE ||
                   '''))),0) FROM ACNTS, TFPRODEXT
                                      WHERE ACNTS.ACNTS_ENTITY_NUM =:1 AND ACNTS.ACNTS_PROD_CODE = TFPRODEXT.TFPROD_PRODUCT_CODE AND ACNTS.ACNTS_CLOSURE_DATE IS NULL
                                      AND ACNTS.ACNTS_AC_TYPE IN (''FCSDA'', ''FCSD'') AND ACNTS.ACNTS_CLIENT_NUM =:2 AND TFPRODEXT.TFPROD_FC_SUNDRY = ''1''';
        
          EXECUTE IMMEDIATE W_SQL
            INTO V_SUNDRY_OS_AMT
            USING P_ENTITYNUM, V_COLL_CLIENT(I).CLIENT_CODE;
        
          V_SUNDRY_OS := V_SUNDRY_OS + V_SUNDRY_OS_AMT;
        END LOOP;
      END IF;
    
      RETURN_REC_TABLE.SUNDRY_OS_AMT := V_SUNDRY_OS;
    
      ---------------------------TOTAL_MARGIN_AMT-------------------------------------------
      W_SQL := 'SELECT NVL(SUM(PKG_MARGIN_LIABILITY.GET_LC_TOT_MARGIN_AMT_BAL(S.OLC_ENTITY_NUM,
                                                      S.OLC_BRN_CODE,
                                                      S.OLC_LC_TYPE,
                                                      S.OLC_LC_YEAR,
                                                      S.OLC_LC_SL,
                                                      TRUNC(SYSDATE))),0)
                                                      FROM OLC S
                                                      JOIN ACNTS A
                                                        ON (S.OLC_CUST_LIAB_ACC = A.ACNTS_INTERNAL_ACNUM)
                                                      JOIN ACASLLDTL AD
                                                        ON (A.ACNTS_ENTITY_NUM = AD.ACASLLDTL_ENTITY_NUM AND
                                                           A.ACNTS_INTERNAL_ACNUM = AD.ACASLLDTL_INTERNAL_ACNUM)
                                                      JOIN LIMITLINE L
                                                        ON (AD.ACASLLDTL_ENTITY_NUM = L.LMTLINE_ENTITY_NUM AND
                                                           AD.ACASLLDTL_CLIENT_NUM = L.LMTLINE_CLIENT_CODE AND
                                                           AD.ACASLLDTL_LIMIT_LINE_NUM = L.LMTLINE_NUM)
                                                      WHERE S.OLC_ENTITY_NUM = ' || P_ENTITYNUM || '
                                                      AND S.OLC_CUST_NUM=' || V_COLL_CLIENT(I).CLIENT_CODE || '
                                                      AND S.OLC_BRN_CODE=' || V_COLL_CLIENT(I).BRANCH_CODE || '
                                                      AND L.LMTLINE_SUB_LIMIT_LINE=' || V_COLL_CLIENT(I).GROUP_LIMIT_NUM || '
                                                      AND PKG_MARGIN_LIABILITY.GET_LC_TOT_MARGIN_AMT_BAL(S.OLC_ENTITY_NUM,
                                                                                                         S.OLC_BRN_CODE,
                                                                                                         S.OLC_LC_TYPE,
                                                                                                         S.OLC_LC_YEAR,
                                                                                                         S.OLC_LC_SL,
                                                                                                         TRUNC(SYSDATE)) > 0';
    
      EXECUTE IMMEDIATE W_SQL
        INTO V_TOTAL_MARGIN_AMT;
    
      RETURN_REC_TABLE.TOTAL_MARGIN_AMT := V_TOTAL_MARGIN_AMT;
      RETURN_REC_TABLE.LIMIT_AVL_AMT    := RETURN_REC_TABLE.PARENT_LIM_AMT - RETURN_REC_TABLE.SUNDRY_OS_AMT -
                                           ((RETURN_REC_TABLE.TOTAL_OLC_CASH_LIAB + RETURN_REC_TABLE.TOTAL_OLC_BTB_CASH_LIAB +
                                           RETURN_REC_TABLE.TOTAL_CASH_ACCEP_LIAB + RETURN_REC_TABLE.TOTAL_CASH_BTB_ACCEP_LIAB +
                                           RETURN_REC_TABLE.PAD_OS_CASH_AMT + RETURN_REC_TABLE.PAD_OS_BTB_CASH_AMT + RETURN_REC_TABLE.EDF_OS_AMT +
                                           RETURN_REC_TABLE.FORCED_LOAN_OS_AMT + RETURN_REC_TABLE.LTR_OS_AMT + RETURN_REC_TABLE.LIM_OS_AMT) * (-1));
    
      PIPE ROW(RETURN_REC_TABLE);
      CLEAR_DATA;
    END LOOP;
  END;
  FUNCTION EXPORT_BILL_INFO_DETAILS(P_ENTITY_NUM   IN NUMBER,
                                    P_BRN_CODE     IN NUMBER,
                                    P_ORDER_OPTION IN VARCHAR2,
                                    P_LC_TYPE      IN VARCHAR2,
                                    P_LC_YEAR      IN NUMBER,
                                    P_LC_SERIAL    IN NUMBER,
                                    P_FROM_DATE    IN DATE,
                                    P_ASON_DATE    IN DATE,
                                    P_CUST_CODE    IN VARCHAR2,
                                    P_LOC_FOR_FLAG IN CHAR DEFAULT NULL) RETURN TYPE_RETURN_TABLE_EXP_BILL
    PIPELINED IS
    W_SQLE                    CLOB;
    W_SQL1                    VARCHAR2(32676);
    PRINT_TEMPEXPORTBILL_DATA PKG_TFDASHBOARD_DATA.REC_RETURN_EXP_BILL_INFO;
    E_USEREXCEP EXCEPTION;
    TYPE DFOR_EXPORTBILL_DATA IS RECORD(
      TMP_BILL_ENTITY_NUM        OBILL.OBILL_ENTITY_NUM%TYPE,
      TMP_BILL_BRN               OBILL.OBILL_BRN_CODE%TYPE,
      TMP_BILL_BRN_NAME          MBKBRN.MBKBRN_NAME%TYPE,
      TMP_BILL_TYPE              OBILL.OBILL_TYPE%TYPE,
      TMP_BILL_YEAR              OBILL.OBILL_YEAR%TYPE,
      TMP_BILL_SL                OBILL.OBILL_NO%TYPE,
      TMP_BILL_REF_NO            OBILL.OBILL_CORR_REF_NO%TYPE,
      TMP_BILL_DATE              OBILL.OBILL_DATE%TYPE,
      TMP_BILL_CURR              OBILL.OBILL_BILL_CURR%TYPE,
      TMP_BILL_AMOUNT            NUMBER(18, 3) := 0,
      TMP_CONV_RATE              OBILL.OBILL_CONV_RATE%TYPE,
      TMP_COLLECTION_LIAB        NUMBER(18, 3) := 0,
      TMP_BILL_TO_BNK            OBILLMISC.OBMISC_DOC_SENT_TO_BNK%TYPE,
      TMP_BILL_TO_BNK_NAME       BANKCD.BANKCD_NAME%TYPE,
      TMP_BILL_TO_BRNNAME        MBRN.MBRN_NAME%TYPE,
      TMP_DUE_DATE               VARCHAR2(1000),
      TMP_LCORD_BRN              OBILLLC.OBL_LC_BRN_CODE%TYPE,
      TMP_LCORD_TYPE             OBILLLC.OBL_LC_TYPE%TYPE,
      TMP_LCORD_YEAR             OBILLLC.OBL_LC_YEAR%TYPE,
      TMP_LCORD_SL               OBILLLC.OBL_LC_SL%TYPE,
      TMP_LCORD_REF              ILCE.ILC_CORR_REF%TYPE,
      TMP_DOC_CREDIT_NUM         ILCE.ILC_DOC_CRDT_NO%TYPE,
      TMP_DOC_CREDIT_DATE        ILCE.ILC_DOC_CRDT_DATE%TYPE,
      TMP_IMPORTER_NAME          ILCE.ILC_APPLICANT_NAME%TYPE,
      TMP_IMPORTER_COUNTRY       CNTRY.CNTRY_NAME%TYPE,
      TMP_EXPORTER_CUST_NO       OBILL.OBILL_CLIENT_CODE%TYPE,
      TMP_EXPORTER_NAME          CLIENTS.CLIENTS_NAME%TYPE,
      TMP_PAYMENT_IN_FC          NUMBER(18, 3) := 0,
      TMP_PAYMENT_AMT_IN_BASE    NUMBER(18, 3) := 0,
      TMP_OUTSTD_FC              NUMBER(18, 3) := 0,
      TMP_OUTSTD_BASE            NUMBER(18, 3) := 0,
      TMP_SHIPPER_NAME           OBILLSHIP.OBS_SHIPPER_NAME%TYPE,
      TMP_SHIPPER_ADDRESS        VARCHAR2(2000),
      TMP_SHIPPER_COUNTRY        OBILLSHIP.OBS_SHIPPER_CNTRY%TYPE,
      TMP_LC_ISSUING_BNK         OBILLLC.OBL_LC_OPN_BNK%TYPE,
      TMP_LC_ISSUING_BRANCH      OBILLLC.OBL_LC_OPN_BRN%TYPE,
      TMP_LC_ISSUING_COUNTRY     OBILLLC.OBL_LC_CNTRY%TYPE,
      TMP_LC_OR_ORDER_AMOUNT     NUMBER(18, 3) := 0,
      TMP_LC_OR_ORDER_DATE       OBILLLC.OBL_LC_DATE%TYPE,
      TMP_LAST_DATE_FOR_SHIPMENT OBILLLC.OBL_LAST_SHIP_DATE%TYPE,
      TMP_LAST_DATE_OF_NEG       OBILLLC.OBL_LAST_DATE_OF_NEG%TYPE,
      TMP_DRAWEE_CODE            OBILL.OBILL_DRAWEE_CODE%TYPE,
      TMP_DRAWEE_NAME            OBILL.OBILL_DRAWEE_NAME%TYPE,
      TMP_DRAWEE_ADDRESS         VARCHAR2(2000),
      TMP_DRAWEE_CNTRY           OBILL.OBILL_DRAWEE_CNTRY%TYPE,
      TMP_CONSIGNEE_NAME         OBILL.OBILL_CONSIGNEE_NAME%TYPE,
      TMP_CONSIGNEE_ADDRESS      VARCHAR2(2000),
      TMP_CONSIGNEE_CNTRY        OBILL.OBILL_CONSIGNEE_CNTRY%TYPE,
      TMP_EXPORT_DEST_CNTRY      OBILL.OBILL_REIMB_CNTRY%TYPE,
      TMP_INVOICE_NO             OBILLINV.OBI_INV_NO%TYPE,
      TMP_INVOICE_DATE           OBILLINV.OBI_INV_DATE%TYPE,
      TMP_INVOICE_AMT            NUMBER(18, 3) := 0,
      TMP_INVOICE_TERMS          OBILLINV.OBI_INV_TERMS%TYPE,
      TMP_INVOICE_DISCOUNT       NUMBER(18, 3) := 0,
      TMP_TENOR_TYPE             VARCHAR2(20),
      TMP_EXPORT_FROM            VARCHAR2(50),
      TMP_DOC_TYPE               OBILLTD.OBTD_TRANS_DOC_TYPE%TYPE,
      TMP_DOC_MAST_NO            OBILLTD.OBTD_TRANS_DOC_MAST_NO%TYPE,
      TMP_DOC_DATE               OBILLTD.OBTD_TRANS_DOC_DATE%TYPE,
      TMP_SHIPCMP_CODE           OBILLTD.OBTD_SHIPCMP_CODE%TYPE,
      TMP_VESSEL_NAME            OBILLTD.OBTD_VESSEL_NAME%TYPE,
      TMP_FREIGHT_TERMS          OBILLTD.OBTD_FREIGHT_TERMS%TYPE,
      TMP_FREIGHT_CURR           OBILLTD.OBTD_FREIGHT_CURR%TYPE,
      TMP_FREIGHT_AMOUNT         NUMBER(18, 3) := 0,
      TMP_SHIP_FRM_PORT          OBILLSD.OBSD_SHIP_FRM_PORT_CD%TYPE,
      TMP_SHIP_FRM_PORT_NAME     OBILLSD.OBSD_SHIP_FRM_PORT_NAME%TYPE,
      TMP_DEST_PORT              OBILLSD.OBSD_DEST_PORT_CD%TYPE,
      TMP_DEST_PORT_NAME         OBILLSD.OBSD_DEST_PORT_NAME%TYPE,
      TMP_SHIPMENT_MODE          OBILLSD.OBSD_SHIP_MODE%TYPE,
      TMP_HS_CODE                OBILLCMDY.OBCD_COMM_CODE%TYPE,
      TMP_HSCODE_DESCN           VARCHAR2(2000),
      TMP_COMMODITY_CODE         OBILLCMDY.OBCD_ITC_CODE%TYPE,
      TMP_EXP_FORM_NO            OBILLGR.OBGR_FORM_NO%TYPE,
      TMP_EXP_PORT_CODE          OBILLGR.OBGR_PORT_CODE%TYPE,
      TMP_EXP_CUSTOMS_CODE       OBILLGR.OBGR_CUSTOMS_CD%TYPE,
      TMP_EXP_FORM_AMOUNT        NUMBER(18, 3) := 0,
      TMP_SHIPPING_BILL_NO       OBILLGR.OBGR_SHIP_BILL_NO%TYPE,
      TMP_SHIPPING_BILL_DATE     OBILLGR.OBGR_SHIP_BILL_DATE%TYPE,
      TMP_FB_REF_NO              OBACK.OBACK_FB_REF_NO%TYPE,
      TMP_MATURITY_DATE          OBACK.OBACK_FB_REF_DATED%TYPE);
    TYPE EXPBILL_DATA IS TABLE OF DFOR_EXPORTBILL_DATA INDEX BY PLS_INTEGER;
    VTEMPEXPORTBILL_DATA EXPBILL_DATA;
  BEGIN
    W_SQLE := 'SELECT L.OBILL_ENTITY_NUM,L.OBILL_BRN_CODE,(SELECT BRN.MBRN_NAME FROM MBRN BRN WHERE BRN.MBRN_CODE = L.OBILL_BRN_CODE) BILL_BRN_NAME,L.OBILL_TYPE,
               L.OBILL_YEAR,L.OBILL_NO,L.OBILL_CORR_REF_NO,NVL(L.OBILL_DATE, '''') BILL_DATE,L.OBILL_BILL_CURR BILL_CURR,L.OBILL_BILL_AMT BILL_AMOUNT,
               L.OBILL_CONV_RATE CONV_RATE,NVL(L.OBILL_EQV_BASE_AMT, 0) COLLECTION_LIAB,NVL(M.OBMISC_DOC_SENT_TO_BNK, '''') BILL_TO_BNK,
               NVL((SELECT B.BANKCD_NAME FROM BANKCD B WHERE M.OBMISC_DOC_SENT_TO_BNK = B.BANKCD_CODE),'''') BILL_TO_BNK_NAME,NVL(M.OBMISC_DOC_SENT_TO_BRNNAME, '''') BILL_TO_BRNNAME,
               NVL(TO_CHAR(T.OBT_DUE_DATE, ''DD-MON-YYYY''), '''') MATURITY_DATE,C.OBL_LC_BRN_CODE,C.OBL_LC_TYPE,C.OBL_LC_YEAR,C.OBL_LC_SL,DECODE(C.OBL_ORDER_ILC,
               ''O'',NVL(P.PCLCORD_CORR_REF, ''''),NVL(PB.ILC_CORR_REF, '''')) LCORD_REF,DECODE(C.OBL_ORDER_ILC,''O'',NVL(P.PCLCORD_ORDER_LC_NO, ''''),NVL(PB.ILC_DOC_CRDT_NO, '''')) DOC_CRDT_NO,
               DECODE(C.OBL_ORDER_ILC,''O'',NVL(P.PCLCORD_ORDER_LC_DATE, ''''),NVL(PB.ILC_DOC_CRDT_DATE, '''')) DOC_CRDT_DATE,DECODE(C.OBL_ORDER_ILC,''O'',NVL(P.PCLCORD_COUNTER_PARTY_NAME, ''''),
               NVL(PB.ILC_APPLICANT_NAME, '''')) IMPORTER_NAME,DECODE(C.OBL_ORDER_ILC,''O'',NVL((SELECT CN.CNTRY_NAME FROM CNTRY CN WHERE CN.CNTRY_CODE = P.PCLCORD_COUNT_PARTY_CNTRY_CODE),''''),
               NVL((SELECT CN.CNTRY_NAME FROM CNTRY CN WHERE CN.CNTRY_CODE = PB.ILC_APPLIC_CNTRY),'''')) IMPORTER_COUNTRY,L.OBILL_CLIENT_CODE EXPORTER_CUST_NO,(SELECT CL.CLIENTS_NAME FROM CLIENTS CL
               WHERE CL.CLIENTS_CODE = L.OBILL_CLIENT_CODE) EXPORTER_NAME,0 PAYMENT_IN_FC,0 PAYMENT_AMT_IN_BASE,0 OUTSTD_FC,0 OUTSTD_BASE,OP.OBS_SHIPPER_NAME SHIPPER_NAME,OP.OBS_SHIPPER_ADDR1 
               || '' '' || OP.OBS_SHIPPER_ADDR2 || '' '' ||OP.OBS_SHIPPER_ADDR3 || '' '' || OP.OBS_SHIPPER_ADDR4 || '' '' ||OP.OBS_SHIPPER_ADDR5 SHIPPER_ADDRESS,OP.OBS_SHIPPER_CNTRY SHIPPER_COUNTRY,
               C.OBL_LC_OPN_BNK LC_ISSUING_BNK,C.OBL_LC_OPN_BRN LC_ISSUING_BRANCH,C.OBL_LC_CNTRY LC_ISSUING_COUNTRY,C.OBL_LC_AMT LC_OR_ORDER_AMOUNT,C.OBL_LC_DATE LC_OR_ORDER_DATE,C.OBL_LAST_SHIP_DATE LAST_DATE_FOR_SHIPMENT,
               C.OBL_LAST_DATE_OF_NEG,L.OBILL_DRAWEE_CODE,L.OBILL_DRAWEE_NAME,L.OBILL_DRAWEE_ADD1 || '' '' || L.OBILL_DRAWEE_ADD2 || '' '' ||L.OBILL_DRAWEE_ADD3 || '' '' || L.OBILL_DRAWEE_ADD4 || '' '' ||L.OBILL_DRAWEE_ADD5 DRAWEE_ADDRESS,
               L.OBILL_DRAWEE_CNTRY,L.OBILL_CONSIGNEE_NAME,L.OBILL_CONSIGNEE_ADD1 || '' '' || L.OBILL_CONSIGNEE_ADD2 || '' '' ||L.OBILL_CONSIGNEE_ADD3 || '' '' || L.OBILL_CONSIGNEE_ADD4 || '' '' ||L.OBILL_CONSIGNEE_ADD5 CONSIGNEE_ADDRESS,
               L.OBILL_CONSIGNEE_CNTRY,L.OBILL_REIMB_CNTRY EXP_DEST_CNTRY,OI.OBI_INV_NO,OI.OBI_INV_DATE,OI.OBI_INV_AMT,OI.OBI_INV_TERMS,OI.OBI_TRADE_DISCOUNT,CASE WHEN T.OBT_USANCE_SIGHT = ''U'' THEN ''USANCE'' WHEN T.OBT_USANCE_SIGHT = ''S'' THEN
               ''SIGHT'' ELSE T.OBT_USANCE_SIGHT END TENOR_TYPE,CASE WHEN OD.OBADD_BANGLA_EPZ_TO_FOREIGN = ''B'' THEN ''BANGLADESH TO FOREIGN'' WHEN OD.OBADD_BANGLA_EPZ_TO_FOREIGN = ''E'' THEN ''EPZ TO FOREIGN'' WHEN OD.OBADD_BANGLA_EPZ_TO_FOREIGN = ''L'' THEN
               ''LOCAL'' END EXPORT_FROM,OT.OBTD_TRANS_DOC_TYPE,OT.OBTD_TRANS_DOC_MAST_NO,OT.OBTD_TRANS_DOC_DATE,OT.OBTD_SHIPCMP_CODE,OT.OBTD_VESSEL_NAME,OT.OBTD_FREIGHT_TERMS,OT.OBTD_FREIGHT_CURR,OT.OBTD_FREIGHT_AMOUNT,OS.OBSD_SHIP_FRM_PORT_CD,
               OS.OBSD_SHIP_FRM_PORT_NAME,OS.OBSD_DEST_PORT_CD,OS.OBSD_DEST_PORT_NAME,OS.OBSD_SHIP_MODE,OC.OBCD_COMM_CODE HS_CODE,OC.OBCD_COMM_DESCN1||'' ''|| OC.OBCD_COMM_DESCN2||'' ''|| OC.OBCD_COMM_DESCN3||'' ''|| OC.OBCD_COMM_DESCN4||'' ''|| OC.OBCD_COMM_DESCN5 HS_CODE_DESC,OC.OBCD_ITC_CODE COMMODITY_CODE,
               OG.OBGR_FORM_NO,OG.OBGR_PORT_CODE,OG.OBGR_CUSTOMS_CD,OG.OBGR_FORM_AMT,OG.OBGR_SHIP_BILL_NO,OG.OBGR_SHIP_BILL_DATE,OBK.OBACK_FB_REF_NO,OBK.OBACK_FB_REF_DATED
  FROM OBILLLC C
  JOIN OBILL L
    ON (C.OBL_ENTITY_NUM = L.OBILL_ENTITY_NUM AND
       C.OBL_BRN_CODE = L.OBILL_BRN_CODE AND C.OBL_OB_TYPE = L.OBILL_TYPE AND
       C.OBL_OB_YR = L.OBILL_YEAR AND C.OBL_OB_NO = L.OBILL_NO)
  INNER JOIN TNOMEN TN
    ON (L.OBILL_TYPE = TN.TNOMEN_NOMEN_CODE)
  LEFT JOIN OBILLMISC M
    ON (L.OBILL_ENTITY_NUM = M.OBMISC_ENTITY_NUM AND
       L.OBILL_BRN_CODE = M.OBMISC_BRN_CODE AND
       L.OBILL_TYPE = M.OBMISC_OB_TYPE AND L.OBILL_YEAR = M.OBMISC_OB_YR AND
       L.OBILL_NO = M.OBMISC_OB_NO)
  JOIN OBILLTEN T
    ON (L.OBILL_ENTITY_NUM = T.OBT_ENTITY_NUM AND
       L.OBILL_BRN_CODE = T.OBT_BRN_CODE AND L.OBILL_TYPE = T.OBT_OB_TYPE AND
       L.OBILL_YEAR = T.OBT_OB_YR AND L.OBILL_NO = T.OBT_OB_NO)
  LEFT JOIN OBILLADD OD
    ON (C.OBL_ENTITY_NUM = OD.OBILLADD_ENTITY_NUM AND
       C.OBL_BRN_CODE = OD.OBADD_BRN_CODE AND
       C.OBL_OB_TYPE = OD.OBADD_OB_TYPE AND C.OBL_OB_YR = OD.OBADD_OB_YR AND
       C.OBL_OB_NO = OD.OBADD_OB_NO)
  LEFT JOIN OBILLINV OI
    ON (C.OBL_ENTITY_NUM = OI.OBI_ENTITY_NUM AND
       C.OBL_BRN_CODE = OI.OBI_BRN_CODE AND C.OBL_OB_TYPE = OI.OBI_OB_TYPE AND
       C.OBL_OB_YR = OI.OBI_OB_YR AND C.OBL_OB_NO = OI.OBI_OB_NO)
  LEFT JOIN ILCE PB
    ON (PB.ILCE_ENTITY_NUM = C.OBL_ENTITY_NUM AND
       PB.ILC_BRN_CODE = C.OBL_LC_BRN_CODE AND
       PB.ILC_INW_LC_CODE = C.OBL_LC_TYPE AND
       PB.ILC_ENTRY_YEAR = C.OBL_LC_YEAR AND PB.ILC_ENTRY_SL = C.OBL_LC_SL AND
       PB.ILC_OPER_SL = 0)
  LEFT JOIN PCLCORD P
    ON (P.PCLCORD_ENTITY_NUM = C.OBL_ENTITY_NUM AND
       P.PCLCORD_BR_CODE = C.OBL_LC_BRN_CODE AND
       P.PCLCORD_ORDER_LODGE_TYPE = C.OBL_LC_TYPE AND
       P.PCLCORD_PC_LODGE_YEAR = C.OBL_LC_YEAR AND
       P.PCLCORD_PC_LODGE_REF_SL = C.OBL_LC_SL)
  LEFT JOIN OBILLTD OT
    ON (C.OBL_ENTITY_NUM = OT.OBTD_ENTITY_NUM AND
       C.OBL_BRN_CODE = OT.OBTD_BRN_CODE AND
       C.OBL_OB_TYPE = OT.OBTD_OB_TYPE AND C.OBL_OB_YR = OT.OBTD_OB_YR AND
       C.OBL_OB_NO = OT.OBTD_OB_NO)
  LEFT JOIN OBILLSD OS
    ON (C.OBL_ENTITY_NUM = OS.OBSD_ENTITY_NUM AND
       C.OBL_BRN_CODE = OS.OBSD_BRN_CODE AND
       C.OBL_OB_TYPE = OS.OBSD_OB_TYPE AND C.OBL_OB_YR = OS.OBSD_OB_YR AND
       C.OBL_OB_NO = OS.OBSD_OB_NO)
  LEFT JOIN OBILLSHIP OP
    ON (C.OBL_ENTITY_NUM = OP.OBS_ENTITY_NUM AND
       C.OBL_BRN_CODE = OP.OBS_BRN_CODE AND C.OBL_OB_TYPE = OP.OBS_OB_TYPE AND
       C.OBL_OB_YR = OP.OBS_OB_YEAR AND C.OBL_OB_NO = OP.OBS_OB_NO)
  LEFT JOIN OBILLCMDY OC
    ON (C.OBL_ENTITY_NUM = OC.OBCD_ENTITY_NUM AND
       C.OBL_BRN_CODE = OC.OBCD_BRN_CODE AND
       C.OBL_OB_TYPE = OC.OBCD_OB_TYPE AND C.OBL_OB_YR = OC.OBCD_OB_YR AND
       C.OBL_OB_NO = OC.OBCD_OB_NO)
  LEFT JOIN OBILLGR OG
    ON (C.OBL_ENTITY_NUM = OG.OBGR_ENTITY_NUM AND
       C.OBL_BRN_CODE = OG.OBGR_BRN_CODE AND
       C.OBL_OB_TYPE = OG.OBGR_OB_TYPE AND C.OBL_OB_YR = OG.OBGR_OB_YR AND
       C.OBL_OB_NO = OG.OBGR_OB_NO)
  LEFT JOIN OBACK OBK 
    ON (C.OBL_ENTITY_NUM=OBK.OBACK_ENTITY_NUM AND 
    C.OBL_BRN_CODE=OBK.OBACK_BRN_CODE AND 
    C.OBL_OB_TYPE=OBK.OBACK_BILL_TYPE AND 
    C.OBL_OB_YR=OBK.OBACK_BILL_YEAR AND 
    C.OBL_OB_NO=OBK.OBACK_BILL_SL)
    WHERE C.OBL_ENTITY_NUM=' || P_ENTITY_NUM || '';
    IF (NVL(P_BRN_CODE, '') IS NOT NULL) THEN
      W_SQLE := W_SQLE || ' AND C.OBL_LC_BRN_CODE = ' || P_BRN_CODE || '';
    END IF;
    IF (NVL(P_ORDER_OPTION, '') IS NOT NULL) THEN
      W_SQLE := W_SQLE || ' AND C.OBL_LC_TYPE=' || CHR(39) || P_LC_TYPE || CHR(39) || '
               AND C.OBL_LC_YEAR=' || P_LC_YEAR || '
               AND C.OBL_LC_SL=' || P_LC_SERIAL || '';
    END IF;
  
    IF (NVL(P_LOC_FOR_FLAG, '') IS NOT NULL AND (P_LOC_FOR_FLAG = 'I' OR P_LOC_FOR_FLAG = 'O')) THEN
      W_SQLE := W_SQLE || ' AND TN.TNOMEN_INLAND_OVERSEAS = ' || CHR(39) || P_LOC_FOR_FLAG || CHR(39) || '';
    END IF;
    IF (P_FROM_DATE IS NOT NULL AND P_ASON_DATE IS NOT NULL) THEN
      W_SQLE := W_SQLE || ' AND L.POST_TRAN_DATE BETWEEN  ' || CHR(39) || TO_CHAR(P_FROM_DATE, 'DD-MON-YYYY') || CHR(39) || ' AND ' || CHR(39) ||
                TO_CHAR(P_ASON_DATE, 'DD-MON-YYYY') || CHR(39) || '
                    AND L.OBILL_AUTH_ON IS NOT NULL ';
    END IF;
    IF (NVL(P_FROM_DATE, '') IS NULL) THEN
      W_SQLE := W_SQLE || ' AND TRUNC(L.POST_TRAN_DATE) <=' || CHR(39) || TO_CHAR(P_ASON_DATE, 'DD-MON-YYYY') || CHR(39) || '
                    AND L.OBILL_AUTH_ON IS NOT NULL ';
    END IF;
    IF (NVL(P_CUST_CODE, '') IS NOT NULL) THEN
      W_SQLE := W_SQLE || ' AND L.OBILL_CLIENT_CODE = ' || CHR(39) || P_CUST_CODE || CHR(39);
    END IF;
    W_SQLE := W_SQLE || ' ORDER BY L.OBILL_ENTITY_NUM, L.OBILL_BRN_CODE, L.OBILL_CLIENT_CODE, LCORD_REF, L.OBILL_TYPE, L.OBILL_YEAR, L.OBILL_NO';
    --DBMS_OUTPUT.PUT_LINE(TO_CHAR(W_SQLE));
    EXECUTE IMMEDIATE W_SQLE BULK COLLECT
      INTO VTEMPEXPORTBILL_DATA;
    IF (VTEMPEXPORTBILL_DATA.FIRST IS NOT NULL) THEN
      FOR I IN VTEMPEXPORTBILL_DATA.FIRST .. VTEMPEXPORTBILL_DATA.LAST LOOP
        PRINT_TEMPEXPORTBILL_DATA.BILL_ENTITY_NUM        := VTEMPEXPORTBILL_DATA(I).TMP_BILL_ENTITY_NUM;
        PRINT_TEMPEXPORTBILL_DATA.BILL_BRN               := VTEMPEXPORTBILL_DATA(I).TMP_BILL_BRN;
        PRINT_TEMPEXPORTBILL_DATA.BILL_BRN_NAME          := VTEMPEXPORTBILL_DATA(I).TMP_BILL_BRN_NAME;
        PRINT_TEMPEXPORTBILL_DATA.BILL_TYPE              := VTEMPEXPORTBILL_DATA(I).TMP_BILL_TYPE;
        PRINT_TEMPEXPORTBILL_DATA.BILL_YEAR              := VTEMPEXPORTBILL_DATA(I).TMP_BILL_YEAR;
        PRINT_TEMPEXPORTBILL_DATA.BILL_SL                := VTEMPEXPORTBILL_DATA(I).TMP_BILL_SL;
        PRINT_TEMPEXPORTBILL_DATA.BILL_REF_NO            := VTEMPEXPORTBILL_DATA(I).TMP_BILL_REF_NO;
        PRINT_TEMPEXPORTBILL_DATA.BILL_DATE              := VTEMPEXPORTBILL_DATA(I).TMP_BILL_DATE;
        PRINT_TEMPEXPORTBILL_DATA.BILL_CURR              := VTEMPEXPORTBILL_DATA(I).TMP_BILL_CURR;
        PRINT_TEMPEXPORTBILL_DATA.BILL_AMOUNT            := VTEMPEXPORTBILL_DATA(I).TMP_BILL_AMOUNT;
        PRINT_TEMPEXPORTBILL_DATA.CONV_RATE              := VTEMPEXPORTBILL_DATA(I).TMP_CONV_RATE;
        PRINT_TEMPEXPORTBILL_DATA.COLLECTION_LIAB        := VTEMPEXPORTBILL_DATA(I).TMP_COLLECTION_LIAB;
        PRINT_TEMPEXPORTBILL_DATA.BILL_TO_BNK            := VTEMPEXPORTBILL_DATA(I).TMP_BILL_TO_BNK;
        PRINT_TEMPEXPORTBILL_DATA.BILL_TO_BNK_NAME       := VTEMPEXPORTBILL_DATA(I).TMP_BILL_TO_BNK_NAME;
        PRINT_TEMPEXPORTBILL_DATA.BILL_TO_BRNNAME        := VTEMPEXPORTBILL_DATA(I).TMP_BILL_TO_BRNNAME;
        PRINT_TEMPEXPORTBILL_DATA.DUE_DATE               := VTEMPEXPORTBILL_DATA(I).TMP_DUE_DATE;
        PRINT_TEMPEXPORTBILL_DATA.LCORD_BRN              := VTEMPEXPORTBILL_DATA(I).TMP_LCORD_BRN;
        PRINT_TEMPEXPORTBILL_DATA.LCORD_TYPE             := VTEMPEXPORTBILL_DATA(I).TMP_LCORD_TYPE;
        PRINT_TEMPEXPORTBILL_DATA.LCORD_YEAR             := VTEMPEXPORTBILL_DATA(I).TMP_LCORD_YEAR;
        PRINT_TEMPEXPORTBILL_DATA.LCORD_SL               := VTEMPEXPORTBILL_DATA(I).TMP_LCORD_SL;
        PRINT_TEMPEXPORTBILL_DATA.LCORD_REF              := VTEMPEXPORTBILL_DATA(I).TMP_LCORD_REF;
        PRINT_TEMPEXPORTBILL_DATA.DOC_CREDIT_NUM         := VTEMPEXPORTBILL_DATA(I).TMP_DOC_CREDIT_NUM;
        PRINT_TEMPEXPORTBILL_DATA.DOC_CREDIT_DATE        := VTEMPEXPORTBILL_DATA(I).TMP_DOC_CREDIT_DATE;
        PRINT_TEMPEXPORTBILL_DATA.IMPORTER_NAME          := VTEMPEXPORTBILL_DATA(I).TMP_IMPORTER_NAME;
        PRINT_TEMPEXPORTBILL_DATA.IMPORTER_COUNTRY       := VTEMPEXPORTBILL_DATA(I).TMP_IMPORTER_COUNTRY;
        PRINT_TEMPEXPORTBILL_DATA.EXPORTER_CUST_NO       := VTEMPEXPORTBILL_DATA(I).TMP_EXPORTER_CUST_NO;
        PRINT_TEMPEXPORTBILL_DATA.EXPORTER_NAME          := VTEMPEXPORTBILL_DATA(I).TMP_EXPORTER_NAME;
        PRINT_TEMPEXPORTBILL_DATA.PAYMENT_IN_FC          := VTEMPEXPORTBILL_DATA(I).TMP_PAYMENT_IN_FC;
        PRINT_TEMPEXPORTBILL_DATA.PAYMENT_AMT_IN_BASE    := VTEMPEXPORTBILL_DATA(I).TMP_PAYMENT_AMT_IN_BASE;
        PRINT_TEMPEXPORTBILL_DATA.OUTSTD_FC              := VTEMPEXPORTBILL_DATA(I).TMP_OUTSTD_FC;
        PRINT_TEMPEXPORTBILL_DATA.OUTSTD_BASE            := VTEMPEXPORTBILL_DATA(I).TMP_OUTSTD_BASE;
        PRINT_TEMPEXPORTBILL_DATA.SHIPPER_NAME           := VTEMPEXPORTBILL_DATA(I).TMP_SHIPPER_NAME;
        PRINT_TEMPEXPORTBILL_DATA.SHIPPER_ADDRESS        := VTEMPEXPORTBILL_DATA(I).TMP_SHIPPER_ADDRESS;
        PRINT_TEMPEXPORTBILL_DATA.SHIPPER_COUNTRY        := VTEMPEXPORTBILL_DATA(I).TMP_SHIPPER_COUNTRY;
        PRINT_TEMPEXPORTBILL_DATA.LC_ISSUING_BNK         := VTEMPEXPORTBILL_DATA(I).TMP_LC_ISSUING_BNK;
        PRINT_TEMPEXPORTBILL_DATA.LC_ISSUING_BRANCH      := VTEMPEXPORTBILL_DATA(I).TMP_LC_ISSUING_BRANCH;
        PRINT_TEMPEXPORTBILL_DATA.LC_ISSUING_COUNTRY     := VTEMPEXPORTBILL_DATA(I).TMP_LC_ISSUING_COUNTRY;
        PRINT_TEMPEXPORTBILL_DATA.LC_OR_ORDER_AMOUNT     := VTEMPEXPORTBILL_DATA(I).TMP_LC_OR_ORDER_AMOUNT;
        PRINT_TEMPEXPORTBILL_DATA.LC_OR_ORDER_DATE       := VTEMPEXPORTBILL_DATA(I).TMP_LC_OR_ORDER_DATE;
        PRINT_TEMPEXPORTBILL_DATA.LAST_DATE_FOR_SHIPMENT := VTEMPEXPORTBILL_DATA(I).TMP_LAST_DATE_FOR_SHIPMENT;
        PRINT_TEMPEXPORTBILL_DATA.LAST_DATE_OF_NEG       := VTEMPEXPORTBILL_DATA(I).TMP_LAST_DATE_OF_NEG;
        PRINT_TEMPEXPORTBILL_DATA.DRAWEE_CODE            := VTEMPEXPORTBILL_DATA(I).TMP_DRAWEE_CODE;
        PRINT_TEMPEXPORTBILL_DATA.DRAWEE_NAME            := VTEMPEXPORTBILL_DATA(I).TMP_DRAWEE_NAME;
        PRINT_TEMPEXPORTBILL_DATA.DRAWEE_ADDRESS         := VTEMPEXPORTBILL_DATA(I).TMP_DRAWEE_ADDRESS;
        PRINT_TEMPEXPORTBILL_DATA.DRAWEE_CNTRY           := VTEMPEXPORTBILL_DATA(I).TMP_DRAWEE_CNTRY;
        PRINT_TEMPEXPORTBILL_DATA.CONSIGNEE_NAME         := VTEMPEXPORTBILL_DATA(I).TMP_CONSIGNEE_NAME;
        PRINT_TEMPEXPORTBILL_DATA.CONSIGNEE_ADDRESS      := VTEMPEXPORTBILL_DATA(I).TMP_CONSIGNEE_ADDRESS;
        PRINT_TEMPEXPORTBILL_DATA.CONSIGNEE_CNTRY        := VTEMPEXPORTBILL_DATA(I).TMP_CONSIGNEE_CNTRY;
        PRINT_TEMPEXPORTBILL_DATA.EXPORT_DEST_CNTRY      := VTEMPEXPORTBILL_DATA(I).TMP_EXPORT_DEST_CNTRY;
        PRINT_TEMPEXPORTBILL_DATA.INVOICE_NO             := VTEMPEXPORTBILL_DATA(I).TMP_INVOICE_NO;
        PRINT_TEMPEXPORTBILL_DATA.INVOICE_DATE           := VTEMPEXPORTBILL_DATA(I).TMP_INVOICE_DATE;
        PRINT_TEMPEXPORTBILL_DATA.INVOICE_AMT            := VTEMPEXPORTBILL_DATA(I).TMP_INVOICE_AMT;
        PRINT_TEMPEXPORTBILL_DATA.INVOICE_TERMS          := VTEMPEXPORTBILL_DATA(I).TMP_INVOICE_TERMS;
        PRINT_TEMPEXPORTBILL_DATA.INVOICE_DISCOUNT       := VTEMPEXPORTBILL_DATA(I).TMP_INVOICE_DISCOUNT;
        PRINT_TEMPEXPORTBILL_DATA.TENOR_TYPE             := VTEMPEXPORTBILL_DATA(I).TMP_TENOR_TYPE;
        PRINT_TEMPEXPORTBILL_DATA.EXPORT_FROM            := VTEMPEXPORTBILL_DATA(I).TMP_EXPORT_FROM;
        PRINT_TEMPEXPORTBILL_DATA.DOC_TYPE               := VTEMPEXPORTBILL_DATA(I).TMP_DOC_TYPE;
        PRINT_TEMPEXPORTBILL_DATA.DOC_MAST_NO            := VTEMPEXPORTBILL_DATA(I).TMP_DOC_MAST_NO;
        PRINT_TEMPEXPORTBILL_DATA.DOC_DATE               := VTEMPEXPORTBILL_DATA(I).TMP_DOC_DATE;
        PRINT_TEMPEXPORTBILL_DATA.SHIPCMP_CODE           := VTEMPEXPORTBILL_DATA(I).TMP_SHIPCMP_CODE;
        PRINT_TEMPEXPORTBILL_DATA.VESSEL_NAME            := VTEMPEXPORTBILL_DATA(I).TMP_VESSEL_NAME;
        PRINT_TEMPEXPORTBILL_DATA.FREIGHT_TERMS          := VTEMPEXPORTBILL_DATA(I).TMP_FREIGHT_TERMS;
        PRINT_TEMPEXPORTBILL_DATA.FREIGHT_CURR           := VTEMPEXPORTBILL_DATA(I).TMP_FREIGHT_CURR;
        PRINT_TEMPEXPORTBILL_DATA.FREIGHT_AMOUNT         := VTEMPEXPORTBILL_DATA(I).TMP_FREIGHT_AMOUNT;
        PRINT_TEMPEXPORTBILL_DATA.SHIP_FRM_PORT          := VTEMPEXPORTBILL_DATA(I).TMP_SHIP_FRM_PORT;
        PRINT_TEMPEXPORTBILL_DATA.SHIP_FRM_PORT_NAME     := VTEMPEXPORTBILL_DATA(I).TMP_SHIP_FRM_PORT_NAME;
        PRINT_TEMPEXPORTBILL_DATA.DEST_PORT              := VTEMPEXPORTBILL_DATA(I).TMP_DEST_PORT;
        PRINT_TEMPEXPORTBILL_DATA.DEST_PORT_NAME         := VTEMPEXPORTBILL_DATA(I).TMP_DEST_PORT_NAME;
        PRINT_TEMPEXPORTBILL_DATA.SHIPMENT_MODE          := VTEMPEXPORTBILL_DATA(I).TMP_SHIPMENT_MODE;
        PRINT_TEMPEXPORTBILL_DATA.HS_CODE                := VTEMPEXPORTBILL_DATA(I).TMP_HS_CODE;
        PRINT_TEMPEXPORTBILL_DATA.HSCODE_DESCN           := VTEMPEXPORTBILL_DATA(I).TMP_HSCODE_DESCN;
        PRINT_TEMPEXPORTBILL_DATA.COMMODITY_CODE         := VTEMPEXPORTBILL_DATA(I).TMP_COMMODITY_CODE;
        PRINT_TEMPEXPORTBILL_DATA.EXP_FORM_NO            := VTEMPEXPORTBILL_DATA(I).TMP_EXP_FORM_NO;
        PRINT_TEMPEXPORTBILL_DATA.EXP_PORT_CODE          := VTEMPEXPORTBILL_DATA(I).TMP_EXP_PORT_CODE;
        PRINT_TEMPEXPORTBILL_DATA.EXP_CUSTOMS_CODE       := VTEMPEXPORTBILL_DATA(I).TMP_EXP_CUSTOMS_CODE;
        PRINT_TEMPEXPORTBILL_DATA.EXP_FORM_AMOUNT        := VTEMPEXPORTBILL_DATA(I).TMP_EXP_FORM_AMOUNT;
        PRINT_TEMPEXPORTBILL_DATA.SHIPPING_BILL_NO       := VTEMPEXPORTBILL_DATA(I).TMP_SHIPPING_BILL_NO;
        PRINT_TEMPEXPORTBILL_DATA.SHIPPING_BILL_DATE     := VTEMPEXPORTBILL_DATA(I).TMP_SHIPPING_BILL_DATE;
        PRINT_TEMPEXPORTBILL_DATA.FB_REF_NO              := VTEMPEXPORTBILL_DATA(I).TMP_FB_REF_NO;
        PRINT_TEMPEXPORTBILL_DATA.MATURITY_DATE          := VTEMPEXPORTBILL_DATA(I).TMP_MATURITY_DATE;
        BEGIN
          W_SQL1 := ' SELECT NVL(N.OBILL_BILL_AMT, 0) OUTSTD_FC, NVL(OBRETURN_CONTRA_AMT, 0) OUTSTD_BASE
               FROM   OBILL N
               JOIN OBRETURN O
               ON(N.OBILL_ENTITY_NUM=O.OBRETURN_ENTITY_NUM AND N.OBILL_BRN_CODE=O.OBRETURN_BRN_CODE AND N.OBILL_TYPE=O.OBRETURN_BILL_TYPE AND N.OBILL_YEAR=O.OBRETURN_BILL_YEAR AND N.OBILL_NO=O.OBRETURN_BILL_SL)
               JOIN OBILLLC C
               ON(O.OBRETURN_ENTITY_NUM=C.OBL_ENTITY_NUM AND O.OBRETURN_BRN_CODE=C.OBL_BRN_CODE AND O.OBRETURN_BILL_TYPE=C.OBL_OB_TYPE AND O.OBRETURN_BILL_YEAR=C.OBL_OB_YR AND O.OBRETURN_BILL_SL=C.OBL_OB_NO)
               WHERE OBRETURN_AUTH_ON IS NOT NULL AND C.OBL_ENTITY_NUM = :P_ENTITY_NUM AND OBRETURN_BRN_CODE = :BRN_CODE AND OBRETURN_BILL_TYPE = :BILL_TYPE AND OBRETURN_BILL_YEAR = :BILL_YEAR AND OBRETURN_BILL_SL = :BILL_SL ';
          EXECUTE IMMEDIATE W_SQL1
            INTO PRINT_TEMPEXPORTBILL_DATA.PAYMENT_IN_FC, PRINT_TEMPEXPORTBILL_DATA.PAYMENT_AMT_IN_BASE
            USING VTEMPEXPORTBILL_DATA(I).TMP_BILL_ENTITY_NUM, VTEMPEXPORTBILL_DATA(I).TMP_BILL_BRN, VTEMPEXPORTBILL_DATA(I).TMP_BILL_TYPE, VTEMPEXPORTBILL_DATA(I).TMP_BILL_YEAR, VTEMPEXPORTBILL_DATA(I).TMP_BILL_SL;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            BEGIN
              W_SQL1 := ' SELECT NVL(SUM(P.OBPAY_ACT_AMT), 0) OUTSTD_FC, NVL(SUM(D.OBPAYDISB_LIAB_REV_BASE_AMOUNT), 0) OUTSTD_BASE
                FROM   OBPAY P
                JOIN   OBPAYDISB D
                ON     (P.OBPAY_ENTITY_NUM = D.OBPAYD_ENTITY_NUM AND P.OBPAY_BRN_CODE = D.OBPAYD_BRN_CODE AND P.OBPAY_BILL_TYPE = D.OBPAYD_BILL_TYPE AND
                       P.OBPAY_BILL_YEAR = D.OBPAYD_BILL_YEAR AND P.OBPAY_BILL_SL = D.OBPAYD_BILL_SL AND P.OBPAY_TENOR_SL = D.OBPAYD_TENOR_SL AND
                       P.OBPAY_PAY_SL = D.OBPAYD_PAY_SL)
                WHERE  D.OBPAYD_ENTITY_NUM = :ENTITY_NUM
                AND    D.OBPAYD_BRN_CODE = :BRN_CODE
                AND    D.OBPAYD_BILL_TYPE = :BILL_TYPE
                AND    D.OBPAYD_BILL_YEAR = :BILL_YEAR
                AND    D.OBPAYD_BILL_SL = :BILL_SL
                AND    D.OBPAYD_AUTH_ON IS NOT NULL ';
              EXECUTE IMMEDIATE W_SQL1
                INTO PRINT_TEMPEXPORTBILL_DATA.PAYMENT_IN_FC, PRINT_TEMPEXPORTBILL_DATA.PAYMENT_AMT_IN_BASE
                USING VTEMPEXPORTBILL_DATA(I).TMP_BILL_ENTITY_NUM, VTEMPEXPORTBILL_DATA(I).TMP_BILL_BRN, VTEMPEXPORTBILL_DATA(I).TMP_BILL_TYPE, VTEMPEXPORTBILL_DATA(I).TMP_BILL_YEAR, VTEMPEXPORTBILL_DATA(I).TMP_BILL_SL;
            EXCEPTION
              WHEN NO_DATA_FOUND THEN
                PRINT_TEMPEXPORTBILL_DATA.PAYMENT_IN_FC       := 0;
                PRINT_TEMPEXPORTBILL_DATA.PAYMENT_AMT_IN_BASE := 0;
            END;
        END;
        W_SQL1                                := '';
        PRINT_TEMPEXPORTBILL_DATA.OUTSTD_FC   := VTEMPEXPORTBILL_DATA(I).TMP_BILL_AMOUNT - PRINT_TEMPEXPORTBILL_DATA.PAYMENT_IN_FC;
        PRINT_TEMPEXPORTBILL_DATA.OUTSTD_BASE := VTEMPEXPORTBILL_DATA(I).TMP_COLLECTION_LIAB - PRINT_TEMPEXPORTBILL_DATA.PAYMENT_AMT_IN_BASE;
        PIPE ROW(PRINT_TEMPEXPORTBILL_DATA);
      END LOOP;
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('EXCEPTION' || SQLERRM);
    WHEN E_USEREXCEP THEN
      DBMS_OUTPUT.PUT_LINE('ERROR IN EXPORTBILLOS_RPT' || SQLERRM);
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
  END;
END PKG_TFDASHBOARD_DATA;
/
