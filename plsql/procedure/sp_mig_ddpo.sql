CREATE OR REPLACE PROCEDURE SP_MIG_DDPO(P_BRANCH_CODE NUMBER,
                                        P_ERR_MSG     OUT VARCHAR2) IS

  /*
    AUTHOR:S.RAJALAKSHMI
    DATE  :
  
  
  LIST OF  TABLE/S REFERRED
  MIG_DDPO
  
  
  LIST OF TABLES UPDATED
  
  DDPOISSDTL
  DDPOISS
  
  
      MODIFICATION HISTORY
      -----------------------------------------------------------------------------------------
      SL.            DESCRIPTION                                    MOD BY             MOD ON
      -----------------------------------------------------------------------------------------
    */

  W_ENTD_BY     VARCHAR2(8) := 'MIG';
  W_CURR_DATE   DATE;
  W_CLIENT_CODE NUMBER(12);

  W_ER_CODE    VARCHAR2(5);
  W_ER_DESC    VARCHAR2(1000);
  W_SRC_KEY    VARCHAR2(1000);
  W_ISS_DT     DATE;
  W_FIRST      NUMBER(1);
  W_ENTITY_NUM NUMBER(3) := GET_OTN.ENTITY_NUMBER;
  /* DEFAULT VALUES */

  W_DAY_SL   NUMBER(6) := 1; -- RUNNING SERIAL
  W_INST_SL  NUMBER(6) := 1; -- DEFAULT VALUE
  W_ISS_TYPE CHAR(1) := NULL; -- DEFAULT VALUE
  -- W_LEAF_NUM NUMBER(2) := 1;

  PROCEDURE POST_ERR_LOG(W_SOURCE_KEY VARCHAR2,
                         W_START_DATE DATE,
                         W_ERROR_CODE VARCHAR2,
                         W_ERROR      VARCHAR2) IS
    --   PRAGMA AUTONOMOUS_TRANSACTION;
  BEGIN
    INSERT INTO MIG_ERRORLOG
      (MIG_ERR_SRC_KEY,
       MIG_ERR_DTL_SL,
       MIG_ERR_MIGDATE,
       MIG_ERR_CODE,
       MIG_ERR_DESC)
    VALUES
      (W_SOURCE_KEY,
       (SELECT NVL(MAX(MIG_ERR_DTL_SL), 0) + 1
          FROM MIG_ERRORLOG P
         WHERE P.MIG_ERR_MIGDATE = W_START_DATE),
       W_START_DATE,
       W_ERROR_CODE,
       W_ERROR);
    COMMIT;
  END POST_ERR_LOG;

BEGIN
  
  P_ERR_MSG := '0';
  W_FIRST   := 1;
  SELECT MN_CURR_BUSINESS_DATE INTO W_CURR_DATE FROM MAINCONT;

  BEGIN
    SP_DD_FINDING(P_BRANCH_CODE);
  END;
  
  UPDATE MIG_DDPO
  SET DDPOISS_BRN_CODE           = TRIM(DDPOISS_BRN_CODE),
      DDPOISS_REMIT_CODE         = TRIM(DDPOISS_REMIT_CODE),
      DDPOISS_ISSUE_DATE         = TRIM(DDPOISS_ISSUE_DATE),
      DDPOISS_PUR_ACNT           = TRIM(DDPOISS_PUR_ACNT),
      DDPOISS_PUR_CLIENT_NUM     = TRIM(DDPOISS_PUR_CLIENT_NUM),
      DDPOISS_PUR_NAME           = TRIM(DDPOISS_PUR_NAME),
      DDPOISS_PUR_MODE           = TRIM(DDPOISS_PUR_MODE),
      DDPOISS_INST_CURRENCY      = TRIM(DDPOISS_INST_CURRENCY),
      DDPOISS_INST_BANK          = TRIM(DDPOISS_INST_BANK),
      DDPOISS_INST_BRN           = TRIM(DDPOISS_INST_BRN),
      DDPOISS_INST_AMT           = TRIM(DDPOISS_INST_AMT),
      DDPOISS_ACTUAL_COMMN       = TRIM(DDPOISS_ACTUAL_COMMN),
      DDPOISS_ACTUAL_STAX        = TRIM(DDPOISS_ACTUAL_STAX),
      DDPOISS_BENEF_CODE         = TRIM(DDPOISS_BENEF_CODE),
      DDPOISS_BENEF_NAME1        = TRIM(DDPOISS_BENEF_NAME1),
      DDPOISS_BENEF_NAME2        = TRIM(DDPOISS_BENEF_NAME2),
      DDPOISS_ON_AC_OF           = TRIM(DDPOISS_ON_AC_OF),
      DDPOISS_INST_NUM_PFX       = TRIM(DDPOISS_INST_NUM_PFX),
      DDPOISS_INST_NUM           = TRIM(DDPOISS_INST_NUM),
      DDPOISS_LAST_PRNT_BY       = TRIM(DDPOISS_LAST_PRNT_BY),
      DDPOISS_LAST_PRNT_DATETIME = TRIM(DDPOISS_LAST_PRNT_DATETIME),
      DDPOISS_ENTD_BY            = TRIM(DDPOISS_ENTD_BY),
      DDPOISS_ENTD_ON            = TRIM(DDPOISS_ENTD_ON),
      DDPOISS_PAYMENT_DATE       = TRIM(DDPOISS_PAYMENT_DATE),
      DDPOISS_ADVICE_DATE        = TRIM(DDPOISS_ADVICE_DATE),
      DDPOISS_ADVICE_NUMBER      = TRIM(DDPOISS_ADVICE_NUMBER);
  

  FOR IDX IN (SELECT DDPOISS_BRN_CODE,
                     DDPOISS_REMIT_CODE,
                     DDPOISS_ISSUE_DATE,
                     DDPOISS_PUR_ACNT,
                     DDPOISS_PUR_CLIENT_NUM,
                     DDPOISS_PUR_NAME,
                     DDPOISS_PUR_MODE,
                     DDPOISS_INST_CURRENCY,
                     DDPOISS_INST_BANK,
                     DDPOISS_INST_BRN,
                     DDPOISS_INST_AMT,
                     DDPOISS_ACTUAL_COMMN,
                     DDPOISS_ACTUAL_STAX,
                     DDPOISS_BENEF_CODE,
                     DDPOISS_BENEF_NAME1,
                     DDPOISS_BENEF_NAME2,
                     DDPOISS_ON_AC_OF,
                     DDPOISS_INST_NUM_PFX,
                     DDPOISS_INST_NUM,
                     DDPOISS_LAST_PRNT_BY,
                     DDPOISS_LAST_PRNT_DATETIME,
                     DDPOISS_ENTD_BY,
                     DDPOISS_ENTD_ON,
                     DDPOISS_PAYMENT_DATE,
                     DDPOISS_ADVICE_DATE, -- ADDED RAMESH M/CHN/03-DEC-12 FOR DD X ADVICE
                     DDPOISS_ADVICE_NUMBER
                FROM MIG_DDPO
               ORDER BY DDPOISS_ISSUE_DATE) LOOP
  
    IF W_FIRST = 1 THEN
      W_ISS_DT := IDX.DDPOISS_ISSUE_DATE;
      W_FIRST  := 2;
    ELSIF W_ISS_DT <> IDX.DDPOISS_ISSUE_DATE THEN
      W_DAY_SL := W_DAY_SL + 1;
      W_ISS_DT := IDX.DDPOISS_ISSUE_DATE;
    ELSE
      W_DAY_SL := W_DAY_SL + 1;
    END IF;
  
    <<IN_DDPOISSDTL>>
    BEGIN
      INSERT INTO DDPOISSDTL
        (DDPOISSDTL_ENTITY_NUM,
         DDPOISSDTL_BRN_CODE,
         DDPOISSDTL_REMIT_CODE,
         DDPOISSDTL_ISSUE_DATE,
         DDPOISSDTL_DAY_SL,
         DDPOISSDTL_INST_SL,
         DDPOISSDTL_INST_BANK,
         DDPOISSDTL_INST_BRN,
         DDPOISSDTL_INST_AMT,
         DDPOISSDTL_ACTUAL_COMMN,
         DDPOISSDTL_ACTUAL_STAX,
         DDPOISSDTL_SYS_CALC_COMMN,
         DDPOISSDTL_SYS_CALC_STAX,
         DDPOISSDTL_BENEF_CODE,
         DDPOISSDTL_BENEF_NAME1,
         DDPOISSDTL_BENEF_NAME2,
         DDPOISSDTL_ON_AC_OF,
         DDPOISSDTL_ISS_TYPE,
         DDPOISSDTL_INST_NUM_PFX,
         DDPOISSDTL_INST_NUM,
         DDPOISSDTL_LAST_PRNT_BY,
         DDPOISSDTL_LAST_PRNT_DATETIME,
         DDPOISSDTL_CAN_STATUS)
      VALUES
        (W_ENTITY_NUM,
         P_BRANCH_CODE,
         IDX.DDPOISS_REMIT_CODE,
         W_ISS_DT,
         W_DAY_SL,
         W_INST_SL,
         IDX.DDPOISS_INST_BANK,
         IDX.DDPOISS_INST_BRN,
         IDX.DDPOISS_INST_AMT,
         IDX.DDPOISS_ACTUAL_COMMN,
         IDX.DDPOISS_ACTUAL_STAX,
         0,
         0,
         IDX.DDPOISS_BENEF_CODE,
         IDX.DDPOISS_BENEF_NAME1,
         IDX.DDPOISS_BENEF_NAME2,
         IDX.DDPOISS_ON_AC_OF,
         W_ISS_TYPE,
         IDX.DDPOISS_INST_NUM_PFX,
         IDX.DDPOISS_INST_NUM,
         IDX.DDPOISS_LAST_PRNT_BY,
         IDX.DDPOISS_LAST_PRNT_DATETIME,
         NULL);
    EXCEPTION
      WHEN OTHERS THEN
        W_ER_CODE := 'DDPO1';
        W_ER_DESC := 'SP_MIG_DDPO-SELECT-INSERT-DDPOISSDTL' || SQLERRM;
        W_SRC_KEY := P_BRANCH_CODE || '-' || 'OLD_AC_NUMBER' ||
                     IDX.DDPOISS_INST_NUM;
        POST_ERR_LOG(W_SRC_KEY, W_CURR_DATE, W_ER_CODE, W_ER_DESC);
    END IN_DDPOISSDTL;
  
    <<CLIENT_CHECK>>
    BEGIN
      SELECT NEW_CLCODE
        INTO W_CLIENT_CODE
        FROM TEMP_CLIENT S
       WHERE OLD_CLCODE = IDX.DDPOISS_PUR_CLIENT_NUM;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        W_CLIENT_CODE := 0;
      WHEN OTHERS THEN
        W_ER_CODE := 'DDPO2';
        W_ER_DESC := 'SP_MIG_DDPO-SELECT-CHECK CLIENT CODE' || SQLERRM;
        W_SRC_KEY := P_BRANCH_CODE || '-' || 'OLD_AC_NUMBER' ||
                     IDX.DDPOISS_INST_NUM;
        POST_ERR_LOG(W_SRC_KEY, W_CURR_DATE, W_ER_CODE, W_ER_DESC);
    END CLIENT_CHECK;
    <<IN_DDPOISS>>
    BEGIN
      INSERT INTO DDPOISS
        (DDPOISS_ENTITY_NUM,
         DDPOISS_BRN_CODE,
         DDPOISS_REMIT_CODE,
         DDPOISS_ISSUE_DATE,
         DDPOISS_DAY_SL,
         DDPOISS_PUR_ACNT,
         DDPOISS_PUR_CLIENT_NUM,
         DDPOISS_PUR_NAME,
         DDPOISS_PUR_MODE,
         DDPOISS_INST_CURRENCY,
         DDPOISS_NUM_OF_INST,
         DDPOISS_TOT_INST_AMT,
         DDPOISS_TOT_ACTUAL_COMM,
         DDPOISS_TOT_STAX_AMT,
         DDPOISS_TOT_DB_AMT,
         POST_TRAN_BRN,
         POST_TRAN_DATE,
         POST_TRAN_BATCH_NUM,
         DDPOISS_TRANSTL_INV_NUM,
         DDPOISS_ENTD_BY,
         DDPOISS_ENTD_ON,
         DDPOISS_LAST_MOD_BY,
         DDPOISS_LAST_MOD_ON,
         DDPOISS_AUTH_BY,
         DDPOISS_AUTH_ON,
         DDPOISS_REJ_BY,
         DDPOISS_REJ_ON,
         DDPOISS_STATUS)
      VALUES
        (W_ENTITY_NUM,
         P_BRANCH_CODE,
         IDX.DDPOISS_REMIT_CODE,
         W_ISS_DT,
         W_DAY_SL,
         IDX.DDPOISS_PUR_ACNT,
         IDX.DDPOISS_PUR_CLIENT_NUM,
         IDX.DDPOISS_PUR_NAME,
         IDX.DDPOISS_PUR_MODE,
         IDX.DDPOISS_INST_CURRENCY,
         1,
         IDX.DDPOISS_INST_AMT,
         IDX.DDPOISS_ACTUAL_COMMN,
         IDX.DDPOISS_ACTUAL_STAX,
         NULL,
         NULL,
         NULL,
         NULL,
         NULL,
         W_ENTD_BY,
         W_CURR_DATE,
         NULL,
         NULL,
         W_ENTD_BY,
         W_CURR_DATE,
         NULL,
         NULL,
         NULL);
    EXCEPTION
      WHEN OTHERS THEN
        W_ER_CODE := 'DDPO3';
        W_ER_DESC := 'SP_MIG_DDPO-IN_DDPOISS' || SQLERRM;
        W_SRC_KEY := P_BRANCH_CODE || '-' || IDX.DDPOISS_INST_NUM;
        POST_ERR_LOG(W_SRC_KEY, W_CURR_DATE, W_ER_CODE, W_ER_DESC);
    END IN_DDPOISS;
  
    <<IN_DDPOPAYDB>>
    BEGIN
      INSERT INTO DDPOPAYDB
        (DDPOPAYDB_ENTITY_NUM,
         DDPOPAYDB_REMIT_CODE,
         DDPOPAYDB_INST_PFX,
         DDPOPAYDB_LEAF_NUM,
         DDPOPAYDB_ISSUED_BANK,
         DDPOPAYDB_ISSUED_BRN,
         DDPOPAYDB_INST_CURRENCY,
         DDPOPAYDB_INST_AMT,
         DDPOPAYDB_ISSUED_ON_BNK,
         DDPOPAYDB_ISSUED_ON_BRN,
         DDPOPAYDB_BENEF_NAME1,
         DDPOPAYDB_BENEF_NAME2,
         DDPOPAYDB_CLIENT_CODE,
         DDPOPAYDB_APPLICANT_NAME,
         DDPOPAYDB_INST_DATE,
         DDPOPAYDB_STATUS,
         DDPOPAYDB_PAY_CAN_DUP_DATE, -- FOR X ADVICE PAYMENT DATE HAS TO BE UPDATED FOR THIS COLUMN
         DDPOPAYDB_DUP_INST_PFX,
         DDPOPAYDB_DUP_INST_LEAF_NUM,
         DDPOPAYDB_REVALID_DATE,
         DDPOPAYDB_ADVICE_REC_DATE, --  -- Added By Ramesh M On 26/Mar/2013 to update the DDPOPAYDB_ADVICE_REC_DATE for DD Advice  Payable.
         DDPOPAYDB_ADVICE_DATE,
         DDPOPAYDB_ADVICE_NO)
      VALUES
        (W_ENTITY_NUM,
         IDX.DDPOISS_REMIT_CODE,
         IDX.DDPOISS_INST_NUM_PFX,
         IDX.DDPOISS_INST_NUM, -- DDPOPAYDB_LEAF_NUM MOVED DDPOISS_INST_NUM
         IDX.DDPOISS_INST_BANK,
         IDX.DDPOISS_BRN_CODE,
         IDX.DDPOISS_INST_CURRENCY,
         IDX.DDPOISS_INST_AMT,
         --NULL,
         IDX.DDPOISS_INST_BANK,
         --NULL,
         IDX.DDPOISS_INST_BRN, -- TO BE REPLACED RAMESH
         IDX.DDPOISS_BENEF_NAME1,
         IDX.DDPOISS_BENEF_NAME2,
         IDX.DDPOISS_PUR_CLIENT_NUM,
         IDX.DDPOISS_PUR_NAME,
         IDX.DDPOISS_ISSUE_DATE,
         NULL, -- FOR ADVICE DDPOPAYDB_STATUS IS NULL  X ADVICE DDPOPAYDB_STATUS IS 'E'
         IDX.DDPOISS_PAYMENT_DATE, --  FOR X ADVICE PAYMENT DATE HAS  DDPOISS_PAYMENT_DATE
         NULL,
         NULL,
         NULL,
         IDX.DDPOISS_ISSUE_DATE, -- Added By Ramesh M On 26/Mar/2013 to update the DDPOPAYDB_ADVICE_REC_DATE for DD Advice  Payable.
         IDX.DDPOISS_ISSUE_DATE, -- Mandatory for DD Adv,Drafts payable
         IDX.DDPOISS_ADVICE_NUMBER);
      UPDATE DDPOPAYDB
         SET DDPOPAYDB_STATUS = 'E'
       WHERE DDPOPAYDB_PAY_CAN_DUP_DATE IS NOT NULL; -- UPDATING PAYMENT DATE FOR X ADVICE (RAMESH M/CHN/23-DEC-12).
    EXCEPTION
      WHEN OTHERS THEN
        W_ER_CODE := 'DDPO4';
        W_ER_DESC := 'SP_MIG_DDPO-IN_DDPOPAYDB' || SQLERRM;
        W_SRC_KEY := P_BRANCH_CODE || '-' || IDX.DDPOISS_INST_NUM;
        POST_ERR_LOG(W_SRC_KEY, W_CURR_DATE, W_ER_CODE, W_ER_DESC);
    END IN_DDPOPAYDB;
  
    <<IN_DDPOISSDTLANX>>
    BEGIN
      INSERT INTO DDPOISSDTLANX
        (DDPOANX_ENTITY_NUM,
         DDPOANX_BRN_CODE,
         DDPOANX_REMIT_CODE,
         DDPOANX_ISSUE_DATE,
         DDPOANX_DAY_SL,
         DDPOANX_INST_SL,
         DDPOANX_CANC_BY,
         DDPOANX_CANC_DATE,
         DDPOANX_CANC_DAY_SL,
         DDPOANX_REVALID_DATE,
         DDPOANX_REVALID_DAY_SL,
         DDPOANX_DUPISS_DATE,
         DDPOANX_DUPISS_DAY_SL)
      VALUES
        (W_ENTITY_NUM,
         IDX.DDPOISS_BRN_CODE,
         IDX.DDPOISS_REMIT_CODE,
         IDX.DDPOISS_ISSUE_DATE,
         W_DAY_SL,
         W_INST_SL,
         NULL,
         NULL,
         NULL,
         NULL,
         NULL,
         NULL,
         NULL);
    EXCEPTION
      WHEN OTHERS THEN
        W_ER_CODE := 'DDPO5';
        W_ER_DESC := 'SP_MIG_DDPO-IN_DDPOISSDTLANX' || SQLERRM;
        W_SRC_KEY := P_BRANCH_CODE || '-' || IDX.DDPOISS_INST_NUM;
        POST_ERR_LOG(W_SRC_KEY, W_CURR_DATE, W_ER_CODE, W_ER_DESC);
    END IN_DDPOISSDTLANX;
  
  END LOOP;
  COMMIT;

EXCEPTION
  WHEN OTHERS THEN
    P_ERR_MSG := SQLERRM;
    ROLLBACK;
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    /*
    truncate table DDPOISSDTL;
    truncate table DDPOISS;
    truncate table DDPOPAYDB;
    truncate table DDPOISSDTLANX;
    */
END SP_MIG_DDPO;
/
