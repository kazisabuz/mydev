CREATE OR REPLACE PROCEDURE SP_MACRO_DEPOSITS

 IS

  W_MIG_DATE DATE;
  W_BRN_CODE NUMBER(5);
  W_ROWCOUNT NUMBER := 0;

BEGIN

  DELETE FROM ERRORLOG WHERE TEMPLATE_NAME = 'DEPOSITS';
  COMMIT;

  UPDATE MIG_PBDCONTRACT
     SET MIGDEP_INT_CR_AC_NUM = TRIM(MIGDEP_INT_CR_AC_NUM);
  COMMIT;

  SELECT DISTINCT ACOP_BRANCH_CODE INTO W_BRN_CODE FROM MIG_ACOP_BAL;
  SELECT DISTINCT ACOP_BAL_DATE INTO W_MIG_DATE FROM MIG_ACOP_BAL;

  BEGIN
    SP_RDINS_VALIDATE(W_MIG_DATE);
  END;

  BEGIN
    SP_DEPIA_VALIDATE(W_BRN_CODE, W_MIG_DATE);
  END;

  BEGIN
    SP_PBDCONTRACT_VALIDATE(W_BRN_CODE, W_MIG_DATE);
  END;

  --- checking  deposit entry for contract allowed records

  SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_ACNTS
   WHERE ACNTS_PROD_CODE IN
         (SELECT PRODUCT_CODE
            FROM PRODUCTS
           WHERE PRODUCT_CONTRACT_ALLOWED = '1')
     AND ACNTS_ACNUM NOT IN
         (SELECT MIGDEP_DEP_AC_NUM FROM MIG_PBDCONTRACT MP)
     AND ACNTS_ACNUM IN
         (SELECT ACOP_AC_NUM FROM MIG_ACOP_BAL WHERE ACOP_BALANCE <> 0);

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'ACNTS_ACNUM',
       W_ROWCOUNT,
       'NO DEPOSIT ENTRY FOR CONTRACT ALLOWED RECORDS',
       'SELECT ACNTS_ACNUM, ACNTS_PROD_CODE
    FROM MIG_ACNTS 
   WHERE ACNTS_PROD_CODE IN
         (SELECT PRODUCT_CODE
            FROM PRODUCTS
           WHERE PRODUCT_CONTRACT_ALLOWED = ''1'')
     AND ACNTS_ACNUM NOT IN
         (SELECT MIGDEP_DEP_AC_NUM FROM MIG_PBDCONTRACT MP)
     AND ACNTS_ACNUM IN
         (SELECT ACOP_AC_NUM FROM MIG_ACOP_BAL WHERE ACOP_BALANCE <> 0);');
  
  END IF;
  
  ---CHECKING ACOP BALANCE IS GREATER OR EQUAL THAN SUM OF DPIA ACCRU AMOUNT AND RDINS AMOUNT
SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_ACOP_BAL AA, MIG_DEPIA D, MIG_RDINS R
 WHERE     AA.ACOP_AC_NUM = D.DEPIA_ACCOUNTNUM
       AND AA.ACOP_AC_NUM = R.RDINS_RD_AC_NUM
       AND D.DEPIA_ENTRY_TYPE = 'IP'
       AND D.DEPIA_BC_INT_ACCR_AMT + R.RDINS_AMT_OF_PYMT < AA.ACOP_BALANCE;

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'ACOP_BALANCE',
       W_ROWCOUNT,
       'SUM OF DEPIA INT AMOUNT AND RDINS PAYMENT AMOUNT SHOULD NOT BE LESS THAN ACOP BALANCE',
       '
SELECT AA.ACOP_AC_NUM,
       D.DEPIA_BC_INT_ACCR_AMT AMOUNT_FROM_DEPIA,
       R.RDINS_AMT_OF_PYMT AMOUNT_FROM_RDINS,
       D.DEPIA_BC_INT_ACCR_AMT + R.RDINS_AMT_OF_PYMT TOTAL_SUM,
       AA.ACOP_BALANCE,
       (D.DEPIA_BC_INT_ACCR_AMT + R.RDINS_AMT_OF_PYMT) - AA.ACOP_BALANCE DIFFRENCE
  FROM MIG_ACOP_BAL AA, MIG_DEPIA D, MIG_RDINS R
 WHERE     AA.ACOP_AC_NUM = D.DEPIA_ACCOUNTNUM
       AND AA.ACOP_AC_NUM = R.RDINS_RD_AC_NUM
       AND D.DEPIA_ENTRY_TYPE = ''IP''
       AND D.DEPIA_BC_INT_ACCR_AMT + R.RDINS_AMT_OF_PYMT < AA.ACOP_BALANCE;');
       
 END IF;
  --- checking twds_installment should be multiple of installment in pbdcontract  


  SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_PBDCONTRACT M, MIG_RDINS R
   WHERE M.MIGDEP_PROD_CODE IN
         (SELECT P.PRODUCT_CODE
            FROM PRODUCTS P
           WHERE P.PRODUCT_FOR_DEPOSITS = 1
             AND P.PRODUCT_FOR_RUN_ACS = 0)
     AND M.MIGDEP_CONT_NUM = 0
     AND MOD(R.RDINS_TWDS_INSTLMNT, M.MIGDEP_AC_DEP_AMT) <> 0
     AND M.MIGDEP_DEP_AC_NUM = R.RDINS_RD_AC_NUM;

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'RDINS_TWDS_INSTLMNT',
       W_ROWCOUNT,
       'TWDS_INSTALLMENT SHOULD BE MULTIPLE OF INSTALLMENT IN PBDCONTRACT',
       'SELECT M.MIGDEP_AC_DEP_AMT,
       M.MIGDEP_BC_DEP_AMT,
       M.MIGDEP_DEP_AC_NUM,
       R.RDINS_ENTRY_DATE,
       R.RDINS_AMT_OF_PYMT,
       R.RDINS_TWDS_INSTLMNT,
       R.RDINS_TWDS_INT
  FROM MIG_PBDCONTRACT M, MIG_RDINS R
 WHERE M.MIGDEP_PROD_CODE IN
       (SELECT P.PRODUCT_CODE
          FROM PRODUCTS P
         WHERE P.PRODUCT_FOR_DEPOSITS = 1
           AND P.PRODUCT_FOR_RUN_ACS = 0)
   AND M.MIGDEP_CONT_NUM = 0
   AND MOD(R.RDINS_TWDS_INSTLMNT, M.MIGDEP_AC_DEP_AMT) <> 0
   AND M.MIGDEP_DEP_AC_NUM = R.RDINS_RD_AC_NUM;');
  
  END IF;

  ---- checking deposit account but missing in pbdcontract

  SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_ACNTS A
   WHERE A.ACNTS_PROD_CODE IN
         (SELECT P.PRODUCT_CODE
            FROM PRODUCTS P
           WHERE P.PRODUCT_FOR_DEPOSITS = 1
             AND P.PRODUCT_FOR_RUN_ACS = 0)
     AND A.ACNTS_ACNUM NOT IN
         (SELECT MIG_PBDCONTRACT.MIGDEP_DEP_AC_NUM FROM MIG_PBDCONTRACT)
     AND A.ACNTS_ACNUM IN (SELECT AA.ACOP_AC_NUM
                             FROM MIG_ACOP_BAL AA
                            WHERE AA.ACOP_BALANCE <> 0);

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'MIGDEP_DEP_AC_NUM',
       W_ROWCOUNT,
       'DEPOSIT ACCOUNT BUT MISSING IN PBDCONTRACT',
       'SELECT A.ACNTS_ACNUM, A.ACNTS_PROD_CODE
  FROM MIG_ACNTS A
 WHERE A.ACNTS_PROD_CODE IN
       (SELECT P.PRODUCT_CODE
          FROM PRODUCTS P
         WHERE P.PRODUCT_FOR_DEPOSITS = 1
           AND P.PRODUCT_FOR_RUN_ACS = 0)
   AND A.ACNTS_ACNUM NOT IN
       (SELECT MIG_PBDCONTRACT.MIGDEP_DEP_AC_NUM FROM MIG_PBDCONTRACT)
   AND A.ACNTS_ACNUM IN (SELECT AA.ACOP_AC_NUM
                           FROM MIG_ACOP_BAL AA
                          WHERE AA.ACOP_BALANCE <> 0);');
  
  END IF;

  ---- IA_mismatch_with_pbdcontract_and_depia

  SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_PBDCONTRACT P
    LEFT OUTER JOIN (SELECT D.DEPIA_ACCOUNTNUM,
                            SUM(D.DEPIA_AC_INT_ACCR_AMT) DEP_TOTAL
                       FROM MIG_DEPIA D
                      WHERE D.DEPIA_ENTRY_TYPE = 'IA'
                      GROUP BY D.DEPIA_ACCOUNTNUM)
      ON (P.MIGDEP_DEP_AC_NUM = DEPIA_ACCOUNTNUM)
   WHERE NVL(DEP_TOTAL, 0) <> P.MIGDEP_AC_INT_ACCR_AMT;

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'MIG_PBDCONTRACT, MIG_DEPIA',
       W_ROWCOUNT,
       'INTEREST ACCRUAL MISMATCH WITH  PBDCONTRACT AND DEPIA',
       'SELECT P.MIGDEP_DEP_AC_NUM,
      P.MIGDEP_PROD_CODE,
      NVL(DEP_TOTAL, 0),
      P.MIGDEP_AC_INT_ACCR_AMT
 FROM MIG_PBDCONTRACT P LEFT OUTER JOIN 
      (SELECT D.DEPIA_ACCOUNTNUM, SUM(D.DEPIA_AC_INT_ACCR_AMT) DEP_TOTAL
         FROM MIG_DEPIA D
        WHERE D.DEPIA_ENTRY_TYPE = ''IA''
        GROUP BY D.DEPIA_ACCOUNTNUM)
ON ( P.MIGDEP_DEP_AC_NUM = DEPIA_ACCOUNTNUM)
  WHERE  NVL(DEP_TOTAL,0) <> P.MIGDEP_AC_INT_ACCR_AMT;');
  
  END IF;

  ---- IP_mismatch_with_pbdcontract_and_depia

  SELECT COUNT(*)
    INTO W_ROWCOUNT
    FROM MIG_PBDCONTRACT P
    LEFT OUTER JOIN (SELECT D.DEPIA_ACCOUNTNUM,
                            SUM(D.DEPIA_AC_INT_ACCR_AMT) DEP_TOTAL
                       FROM MIG_DEPIA D
                      WHERE D.DEPIA_ENTRY_TYPE = 'IP'
                      GROUP BY D.DEPIA_ACCOUNTNUM)
      ON (P.MIGDEP_DEP_AC_NUM = DEPIA_ACCOUNTNUM)
   WHERE NVL(DEP_TOTAL, 0) <> P.MIGDEP_BC_INT_PAY_AMT;

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'MIG_PBDCONTRACT, MIG_DEPIA',
       W_ROWCOUNT,
       'INTEREST PAID AMOUNT MISMATCH WITH  PBDCONTRACT AND DEPIA',
       'SELECT P.MIGDEP_DEP_AC_NUM,
      P.MIGDEP_PROD_CODE,
      NVL(DEP_TOTAL, 0),
      P.MIGDEP_BC_INT_PAY_AMT
 FROM MIG_PBDCONTRACT P LEFT OUTER JOIN 
      (SELECT D.DEPIA_ACCOUNTNUM, SUM(D.DEPIA_AC_INT_ACCR_AMT) DEP_TOTAL
         FROM MIG_DEPIA D
        WHERE D.DEPIA_ENTRY_TYPE = ''IP''
        GROUP BY D.DEPIA_ACCOUNTNUM)
ON ( P.MIGDEP_DEP_AC_NUM = DEPIA_ACCOUNTNUM)
  WHERE  NVL(DEP_TOTAL,0) <> P.MIGDEP_BC_INT_PAY_AMT;');
  
  END IF;
  
  ----DEPOSIT OPEN DATE CAN NOT BE GRATER THAN 12-MAY-2016--------
  
  SELECT COUNT(*)
    INTO W_ROWCOUNT
     FROM MIG_PBDCONTRACT P
 WHERE P.MIGDEP_PROD_CODE IN (1072, 1075, 1078)
   AND P.MIGDEP_DEP_OPEN_DATE > '12-MAY-2016';

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('DEPOSITS',
       'MIGDEP_DEP_OPEN_DATE',
       W_ROWCOUNT,
       'DEPOSIT OPEN DATE CAN NOT BE GRATER THAN 12-MAY-2016',
       'SELECT P.MIGDEP_DEP_AC_NUM,P.MIGDEP_PROD_CODE,P.MIGDEP_DEP_OPEN_DATE
  FROM MIG_PBDCONTRACT P
 WHERE P.MIGDEP_PROD_CODE IN (1072, 1075, 1078)
   AND P.MIGDEP_DEP_OPEN_DATE > ''12-MAY-2016'';');
  
  END IF;

---LIEN TO ACCOUNT NUMBER NOT PRESENT IN PBDCONTRACT
 
SELECT COUNT(W_ROWCOUNT) INTO W_ROWCOUNT
  FROM MIG_ACNTLIEN, MIG_PBDCONTRACT
 WHERE     ACNTLIEN_ACNUM = MIGDEP_DEP_AC_NUM
       AND ACNTLIEN_LIEN_TO_ACNUM NOT IN
              (SELECT NVL (MIGDEP_LIEN_TO_ACNUM, '#') FROM MIG_PBDCONTRACT);

  IF W_ROWCOUNT > 0 THEN
  
    INSERT INTO ERRORLOG
      (TEMPLATE_NAME, COLUMN_NAME, ROW_COUNT, SUGGESTION, QUERY)
    VALUES
      ('MIG_PBDCONTRACT',
       'MIGDEP_LIEN_TO_ACNUM',
       W_ROWCOUNT,
       'MIGDEP_LIEN_TO_ACNUM NOT PRESENT IN MIG_ACNTLIEN',
       'SELECT ACNTLIEN_ACNUM,
       ACNTLIEN_LIEN_TO_ACNUM,
       MIGDEP_LIEN_TO_ACNUM PBDCONTRACT_LIEN_TO_ACNUM
  FROM MIG_ACNTLIEN, MIG_PBDCONTRACT
 WHERE     ACNTLIEN_ACNUM = MIGDEP_DEP_AC_NUM
       AND ACNTLIEN_LIEN_TO_ACNUM NOT IN
              (SELECT NVL (MIGDEP_LIEN_TO_ACNUM, ''#'') FROM MIG_PBDCONTRACT);');
  
  END IF;

---UPDATE MIG_DEPIA FROM  MIG_TDSPIDTL

<<UPDATE_TDS>>
BEGIN
   FOR IDX
      IN (SELECT DEPIA_ACCOUNTNUM,
                 DEPIA_ACCR_UPTO_DATE,
                 IA + NVL (TDSPIDT_TDS_AMT, 0) IA,
                 IP + NVL (TDSPIDT_TDS_AMT, 0) IP,
                 TDSPIDT_TDS_AMT
            FROM (SELECT DEPIA_ACCOUNTNUM,
                         DEPIA_ACCR_UPTO_DATE,
                         DEPIA_BC_INT_ACCR_AMT IP,
                         (SELECT DEPIA_BC_INT_ACCR_AMT
                            FROM MIG_DEPIA
                           WHERE     (   DEPIA_ACCOUNTNUM
                                      || DEPIA_ACCR_UPTO_DATE) =
                                        (   A.DEPIA_ACCOUNTNUM
                                         || A.DEPIA_ACCR_UPTO_DATE)
                                 AND DEPIA_ENTRY_TYPE = 'IA')
                            IA
                    FROM MIG_DEPIA A
                   WHERE DEPIA_ENTRY_TYPE = 'IP') A,
                 MIG_TDSPIDTL
           WHERE DEPIA_ACCOUNTNUM = TDSPIDT_AC_NUM)
   LOOP
      UPDATE MIG_DEPIA
         SET DEPIA_AC_INT_ACCR_AMT = IDX.IA, DEPIA_BC_INT_ACCR_AMT = IDX.IA
       WHERE     DEPIA_ENTRY_TYPE = 'IA'
             AND DEPIA_ACCR_UPTO_DATE = IDX.DEPIA_ACCR_UPTO_DATE
             AND DEPIA_ACCOUNTNUM = IDX.DEPIA_ACCOUNTNUM;

     
      UPDATE MIG_DEPIA
         SET DEPIA_AC_INT_ACCR_AMT = IDX.IP, DEPIA_BC_INT_ACCR_AMT = IDX.IP
       WHERE     DEPIA_ENTRY_TYPE = 'IP'
             AND DEPIA_ACCR_UPTO_DATE = IDX.DEPIA_ACCR_UPTO_DATE
             AND DEPIA_ACCOUNTNUM = IDX.DEPIA_ACCOUNTNUM;
   END LOOP;
   COMMIT;
   DELETE  MIG_TDSPIDTL ;
END UPDATE_TDS;

END SP_MACRO_DEPOSITS;
/
