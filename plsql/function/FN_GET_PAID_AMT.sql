CREATE OR REPLACE FUNCTION FN_GET_PAID_AMT(V_ENTITY_NUM     IN NUMBER,
                                              P_INTERNAL_ACNUM IN NUMBER,
                                              P_ASON_DATE      IN DATE)
  RETURN NUMBER IS
  V_INT_DB_CBS                NUMBER(18, 3);
  V_CHG_DB_CBS                NUMBER(18, 3);
  V_DUE_AMOUNT                NUMBER(18, 3);
  V_TOT_PAID_MONTH            NUMBER;
  V_OD_MONTH                  NUMBER;
  W_REPAY_FREQ                VARCHAR2(5);
  V_TOT_MONTH_FROM_REPAY_DATE NUMBER;
  W_LNACMIS_HO_DEPT_CODE      VARCHAR2(6);
  W_LMTLINE_LIMIT_EXPIRY_DATE DATE;
  W_PRODUCT_FOR_RUN_ACS       CHAR(1);
  W_LMTLINE_CLIENT_CODE       NUMBER(12);
  W_LMTLINE_NUM               NUMBER(6);
  W_MIG_END_DATE              DATE;
  V_REPHASEMENT_ENTRY         LNACRSHIST.LNACRSH_REPHASEMENT_ENTRY%TYPE;
  V_REPH_ON_AMT               LNACRSHIST.LNACRSH_REPH_ON_AMT%TYPE;
  V_PURPOSE_CODE              CHAR(1);
  V_REPHASE_ON_DATE           DATE;
  V_TOT_DISB_AMOUNT           NUMBER(18, 3);
  W_TOT_INT_DB_MIG            NUMBER(18, 3) := 0;
  W_OS_BALANCE                NUMBER(18, 3) := 0;
  V_PAID_AMOUNT               NUMBER(18, 3) := 0;
  W_ASSET_CODE                VARCHAR2(4);
  W_REPAY_FREQ_IN_MON         NUMBER;
  W_REPAY_START_DATE          DATE;
  W_REPAY_AMOUNT              NUMBER(18, 3) := 0;
  V_DEFAULT_AMOUNT            NUMBER(18, 3) := 0;

BEGIN
  PKG_ENTITY.SP_SET_ENTITY_CODE(V_ENTITY_NUM);
  V_INT_DB_CBS                := 0;
  V_CHG_DB_CBS                := 0;
  V_DUE_AMOUNT                := 0;
  V_TOT_MONTH_FROM_REPAY_DATE := 0;
  V_TOT_PAID_MONTH            := 0;
  V_OD_MONTH                  := 0;
  W_LNACMIS_HO_DEPT_CODE      := '';
  W_LMTLINE_LIMIT_EXPIRY_DATE := NULL;
  W_PRODUCT_FOR_RUN_ACS       := '';
  W_REPAY_FREQ                := '';
  W_LMTLINE_CLIENT_CODE       := '';
  W_LMTLINE_NUM               := 0;
  W_MIG_END_DATE              := NULL;
  W_OS_BALANCE                := 0;
  V_PAID_AMOUNT               := 0;
  W_ASSET_CODE                := '';
  W_REPAY_FREQ_IN_MON         := 0;
  W_REPAY_START_DATE          := NULL;
  W_REPAY_AMOUNT              := 0;
  V_DEFAULT_AMOUNT            := 0;

  <<COMMON_QUERY>>
  BEGIN
    SELECT L.LNACMIS_HO_DEPT_CODE,
           LM.LMTLINE_LIMIT_EXPIRY_DATE,
           P.PRODUCT_FOR_RUN_ACS,
           LM.LMTLINE_SANCTION_AMT,
           LM.LMTLINE_CLIENT_CODE,
           LM.LMTLINE_NUM,
           M.MIG_END_DATE,
           OS.ACBALH_BC_BAL,
           AH.ASSETCLSH_ASSET_CODE
      INTO W_LNACMIS_HO_DEPT_CODE,
           W_LMTLINE_LIMIT_EXPIRY_DATE,
           W_PRODUCT_FOR_RUN_ACS,
           V_DUE_AMOUNT,
           W_LMTLINE_CLIENT_CODE,
           W_LMTLINE_NUM,
           W_MIG_END_DATE,
           W_OS_BALANCE,
           W_ASSET_CODE
      FROM ACNTS         A,
           LNACMIS       L,
           ACASLLDTL     AL,
           LIMITLINE     LM,
           PRODUCTS      P,
           MIG_DETAIL    M,
           ACBALASONHIST OS,
           ASSETCLSHIST  AH
     WHERE A.ACNTS_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
       AND L.LNACMIS_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
       AND AL.ACASLLDTL_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
       AND LM.LMTLINE_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
       AND OS.ACBALH_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
       AND AH.ASSETCLSH_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
       AND A.ACNTS_INTERNAL_ACNUM = L.LNACMIS_INTERNAL_ACNUM
       AND L.LNACMIS_INTERNAL_ACNUM = AL.ACASLLDTL_INTERNAL_ACNUM
       AND AL.ACASLLDTL_CLIENT_NUM = LM.LMTLINE_CLIENT_CODE
       AND AL.ACASLLDTL_LIMIT_LINE_NUM = LM.LMTLINE_NUM
       AND A.ACNTS_PROD_CODE = P.PRODUCT_CODE
       AND A.ACNTS_INTERNAL_ACNUM = P_INTERNAL_ACNUM
       AND M.BRANCH_CODE = A.ACNTS_BRN_CODE
       AND OS.ACBALH_INTERNAL_ACNUM = A.ACNTS_INTERNAL_ACNUM
       AND OS.ACBALH_ASON_DATE =
           (SELECT MAX(AT.ACBALH_ASON_DATE)
              FROM ACBALASONHIST AT
             WHERE AT.ACBALH_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
               AND AT.ACBALH_INTERNAL_ACNUM = A.ACNTS_INTERNAL_ACNUM
               AND AT.ACBALH_ASON_DATE <= P_ASON_DATE)
       AND AH.ASSETCLSH_INTERNAL_ACNUM = A.ACNTS_INTERNAL_ACNUM
       AND AH.ASSETCLSH_EFF_DATE =
           (SELECT MAX(ASH.ASSETCLSH_EFF_DATE)
              FROM ASSETCLSHIST ASH
             WHERE ASH.ASSETCLSH_INTERNAL_ACNUM = A.ACNTS_INTERNAL_ACNUM
               AND ASH.ASSETCLSH_EFF_DATE <= P_ASON_DATE);
  EXCEPTION
      WHEN OTHERS THEN
       NULL;
  END COMMON_QUERY;

  <<CHECK_REPHASEMENT_FREQ>>
  BEGIN
    V_REPHASEMENT_ENTRY := 0;
    V_REPH_ON_AMT       := 0;
    V_PURPOSE_CODE      := '';
    V_REPHASE_ON_DATE   := NULL;
    SELECT NVL(LNACRSH_REPHASEMENT_ENTRY, 0),
           LNACRSH_REPH_ON_AMT,
           NVL(LNACRSH_PURPOSE, 'X'),
           LNACRSH_EFF_DATE
      INTO V_REPHASEMENT_ENTRY,
           V_REPH_ON_AMT,
           V_PURPOSE_CODE,
           V_REPHASE_ON_DATE
      FROM LNACRSHIST
     WHERE LNACRSH_EFF_DATE =
           (SELECT MAX(LNACRSH_EFF_DATE)
              FROM LNACRSHIST
             WHERE LNACRSH_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
               AND LNACRSH_INTERNAL_ACNUM = P_INTERNAL_ACNUM
               AND LNACRSH_EFF_DATE <= P_ASON_DATE)
       AND LNACRSH_INTERNAL_ACNUM = P_INTERNAL_ACNUM;
  EXCEPTION
    WHEN OTHERS THEN
      V_REPHASEMENT_ENTRY := 0;
      V_REPH_ON_AMT       := 0;
      V_PURPOSE_CODE      := '';
      V_REPHASE_ON_DATE   := NULL;
    
  END CHECK_REPHASEMENT_FREQ;

  IF (W_PRODUCT_FOR_RUN_ACS = '1') OR (W_REPAY_FREQ = 'X') THEN
    V_PAID_AMOUNT:=0;
  
  ELSE
    <<CHECK_REPAYMENT_FREQ>>
    BEGIN
      SELECT LNACRSHDTL_REPAY_FREQ,
             LNACRSHDTL_REPAY_FROM_DATE,
             LNACRSHDTL_REPAY_AMT
        INTO W_REPAY_FREQ, W_REPAY_START_DATE, W_REPAY_AMOUNT
        FROM LNACRSHDTL
       WHERE LNACRSHDTL_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
         AND LNACRSHDTL_INTERNAL_ACNUM = P_INTERNAL_ACNUM
         AND LNACRSHDTL_EFF_DATE =
             (SELECT MAX(LNACRSHDTL_EFF_DATE)
                FROM LNACRSHDTL
               WHERE LNACRSHDTL_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
                 AND LNACRSHDTL_INTERNAL_ACNUM = P_INTERNAL_ACNUM
                 AND LNACRSHDTL_EFF_DATE <= P_ASON_DATE);
    EXCEPTION
      WHEN OTHERS THEN
        W_REPAY_FREQ       := '';
        W_REPAY_START_DATE := NULL;
        W_REPAY_AMOUNT     := 0;
    END CHECK_REPAYMENT_FREQ;
  
    <<FETCH_LLACNTOS>>
    BEGIN
      V_TOT_DISB_AMOUNT := 0;
      IF ((V_REPHASEMENT_ENTRY = 0) OR
         (V_REPHASEMENT_ENTRY = 1 AND V_PURPOSE_CODE <> 'R')) THEN
        SELECT LLACNTOS_LIMIT_CURR_DISB_MADE
          INTO V_TOT_DISB_AMOUNT
          FROM LLACNTOS
         WHERE LLACNTOS_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
           AND LLACNTOS_CLIENT_CODE = W_LMTLINE_CLIENT_CODE
           AND LLACNTOS_LIMIT_LINE_NUM = W_LMTLINE_NUM
           AND LLACNTOS_CLIENT_ACNUM = P_INTERNAL_ACNUM;
      ELSE
        V_TOT_DISB_AMOUNT := V_REPH_ON_AMT;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        V_TOT_DISB_AMOUNT := 0;
    END FETCH_LLACNTOS;
  
    <<READLNTOTINTDBMIG>>
    BEGIN
      W_TOT_INT_DB_MIG := 0;
      IF ((V_REPHASEMENT_ENTRY = 0) OR
         (V_REPHASEMENT_ENTRY = 1 AND V_PURPOSE_CODE <> 'R') OR
         (V_REPHASEMENT_ENTRY = 1 AND V_PURPOSE_CODE = 'R' AND
         V_REPHASE_ON_DATE <= W_MIG_END_DATE)) THEN
        SELECT ABS(NVL(L.LNTOTINTDB_TOT_INT_DB_AMT, 0))
          INTO W_TOT_INT_DB_MIG
          FROM LNTOTINTDBMIG L
         WHERE L.LNTOTINTDB_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE
           AND L.LNTOTINTDB_INTERNAL_ACNUM = P_INTERNAL_ACNUM;
      ELSE
        W_TOT_INT_DB_MIG := 0;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        W_TOT_INT_DB_MIG := 0;
    END READLNTOTINTDBMIG;
  
    <<READINTCHGDB>>
    BEGIN
      SELECT NVL(SUM(M.TRANADV_INTRD_BC_AMT), 0),
             NVL(SUM(M.TRANADV_CHARGE_BC_AMT), 0)
        INTO V_INT_DB_CBS, V_CHG_DB_CBS
        FROM MV_LOAN_ACCOUNT_BAL_OD M
       WHERE M.TRAN_INTERNAL_ACNUM = P_INTERNAL_ACNUM
         AND M.TRAN_DATE_OF_TRAN >= V_REPHASE_ON_DATE
         AND M.TRAN_DATE_OF_TRAN > W_MIG_END_DATE
         AND M.TRAN_DATE_OF_TRAN <= P_ASON_DATE
         AND M.TRAN_DB_CR_FLG = 'D';
    
    EXCEPTION
      WHEN OTHERS THEN
        V_INT_DB_CBS := 0;
        V_CHG_DB_CBS := 0;
    END READINTCHGDB;
  
    V_PAID_AMOUNT := (ABS(NVL(V_TOT_DISB_AMOUNT, 0)) + W_TOT_INT_DB_MIG +
                     ABS(V_INT_DB_CBS) + ABS(V_CHG_DB_CBS) -
                     ABS(W_OS_BALANCE));
    IF V_PAID_AMOUNT < 0 THEN
      V_PAID_AMOUNT := 0;
    END IF;
  END IF;
   /*
 DBMS_OUTPUT.put_line('V_PAID_AMOUNT = ' || V_PAID_AMOUNT);
  DBMS_OUTPUT.put_line('V_TOT_PAID_MONTH = ' || V_TOT_PAID_MONTH);
   DBMS_OUTPUT.put_line('V_OD_MONTH = ' || V_OD_MONTH);
   DBMS_OUTPUT.put_line('W_OS_BALANCE = ' || W_OS_BALANCE);
   DBMS_OUTPUT.put_line('W_ASSET_CODE = ' || W_ASSET_CODE);
  DBMS_OUTPUT.put_line('W_TOT_INT_DB_MIG = ' || W_TOT_INT_DB_MIG);
   DBMS_OUTPUT.put_line('V_INT_DB_CBS = ' || V_INT_DB_CBS);
   DBMS_OUTPUT.put_line('V_CHG_DB_CBS = ' || V_CHG_DB_CBS);
   DBMS_OUTPUT.put_line('V_TOT_DISB_AMOUNT = ' || V_TOT_DISB_AMOUNT);
   DBMS_OUTPUT.put_line('W_REPAY_AMOUNT = ' || W_REPAY_AMOUNT);
   */

  RETURN V_PAID_AMOUNT;
END FN_GET_PAID_AMT;
/
